{"version":3,"sources":["./src/app/taskboard/taskboard-routing.module.ts","./src/app/taskboard/taskboard.component.html","./src/app/taskboard/taskboard.component.scss","./src/app/taskboard/taskboard.component.ts","./src/app/taskboard/taskboard.model.ts","./src/app/taskboard/taskboard.module.ts","./src/app/taskboard/taskboard.service.ts"],"names":[],"mappings":"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","file":"taskboard.module.chunk.js","sourcesContent":["import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\n\r\nimport { TaskboardComponent } from './taskboard.component';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n     component: TaskboardComponent,\r\n    data: {\r\n      title: 'Taskboard'\r\n    },\r\n    \r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule],\r\n})\r\nexport class TaskboardRoutingModule { }\n\n\n// WEBPACK FOOTER //\n// ./src/app/taskboard/taskboard-routing.module.ts","module.exports = \"<div class=\\\"row\\\">\\r\\n  <div class=\\\"col-sm-12\\\">\\r\\n    <div class=\\\"content-header\\\">Task Board</div>\\r\\n    <p class=\\\"content-sub-header\\\"></p>\\r\\n  </div>\\r\\n</div>\\r\\n<!-- Taskboard Starts -->\\r\\n<section id=\\\"taskboard\\\">\\r\\n\\r\\n\\r\\n  <div class=\\\"row\\\">\\r\\n    <div class=\\\"col-md-3 col-12\\\">\\r\\n      <h4 class=\\\"ml-2 mt-2 text-bold-500\\\"><i class=\\\"ft-list mr-1\\\"></i> To Dos</h4>\\r\\n      <div class='dragdrop-container' [dragula]='\\\"task-group\\\"' [dragulaModel]='todo'>\\r\\n        <div *ngFor='let todo of todo'>\\r\\n          <div class=\\\"card\\\">\\r\\n            <div class=\\\"card-block pt-3\\\">\\r\\n              <div class=\\\"clearfix\\\">\\r\\n                <h5 class=\\\"text-bold-500 primary float-left\\\">{{todo.taskTitle}}</h5>\\r\\n                <div class=\\\"actions float-right\\\">\\r\\n                  <i class=\\\"ft-edit mr-1 info\\\"></i>\\r\\n                  <i class=\\\"ft-trash-2 danger\\\"></i>\\r\\n                </div>\\r\\n              </div>\\r\\n              <p>{{todo.taskMessage}}</p>\\r\\n              <img [src]=\\\"[todo.assignedTo]\\\" class=\\\"rounded-circle width-50 mr-2\\\"> <span class=\\\"primary\\\">{{todo.createdOn}}</span>\\r\\n            </div>\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n    <div class=\\\"col-md-3 col-12\\\">\\r\\n      <h4 class=\\\"ml-2 mt-2 text-bold-500\\\"><i class=\\\"ft-trending-up mr-1\\\"></i> In Progress</h4>\\r\\n      <div class='dragdrop-container' [dragula]='\\\"task-group\\\"' [dragulaModel]='inProcess'>\\r\\n        <div *ngFor='let inProcess of inProcess'>\\r\\n          <div class=\\\"card\\\">\\r\\n            <div class=\\\"card-block pt-3\\\">\\r\\n              <div class=\\\"clearfix\\\">\\r\\n                <h5 class=\\\"text-bold-500 info float-left\\\">{{inProcess.taskTitle}}</h5>\\r\\n                <div class=\\\"actions float-right\\\">\\r\\n                  <i class=\\\"ft-edit mr-1 info\\\"></i>\\r\\n                  <i class=\\\"ft-trash-2 danger\\\"></i>\\r\\n                </div>\\r\\n              </div>\\r\\n              <p>{{inProcess.taskMessage}}</p>\\r\\n              <img [src]=\\\"[inProcess.assignedTo]\\\" class=\\\"rounded-circle width-50 mr-2\\\"> <span class=\\\"info\\\">{{inProcess.createdOn}}</span>\\r\\n            </div>\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n\\r\\n    <div class=\\\"col-md-3 col-12\\\">\\r\\n      <h4 class=\\\"ml-2 mt-2 text-bold-500\\\"><i class=\\\"ft-thumbs-up mr-1\\\"></i>Completed</h4>\\r\\n      <div class='dragdrop-container' [dragula]='\\\"task-group\\\"' [dragulaModel]='completed'>\\r\\n        <div *ngFor='let completed of completed'>\\r\\n          <div class=\\\"card\\\">\\r\\n            <div class=\\\"card-block pt-3\\\">\\r\\n              <div class=\\\"clearfix\\\">\\r\\n                <h5 class=\\\"text-bold-500 success float-left\\\">{{completed.taskTitle}}</h5>\\r\\n                <div class=\\\"actions float-right\\\">\\r\\n                  <i class=\\\"ft-edit mr-1 info\\\"></i>\\r\\n                  <i class=\\\"ft-trash-2 danger\\\"></i>\\r\\n                </div>\\r\\n              </div>\\r\\n              <p>{{completed.taskMessage}}</p>\\r\\n              <img [src]=\\\"[completed.assignedTo]\\\" class=\\\"rounded-circle width-50 mr-2\\\"> <span class=\\\"success\\\">{{completed.createdOn}}</span>\\r\\n            </div>\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n\\r\\n    <div class=\\\"col-md-3 col-12\\\">\\r\\n      <h4 class=\\\"ml-2 mt-2 text-bold-500\\\"><i class=\\\"ft-alert-octagon mr-1\\\"></i>On Hold</h4>\\r\\n      <div class='dragdrop-container' [dragula]='\\\"task-group\\\"' [dragulaModel]='backLog'>\\r\\n        <div *ngFor='let backLog of backLog'>\\r\\n          <div class=\\\"card\\\">\\r\\n            <div class=\\\"card-block pt-3\\\">\\r\\n              <div class=\\\"clearfix\\\">\\r\\n                <h5 class=\\\"text-bold-500 warning float-left\\\">{{backLog.taskTitle}}</h5>\\r\\n                <div class=\\\"actions float-right\\\">\\r\\n                  <i class=\\\"ft-edit mr-1 info\\\"></i>\\r\\n                  <i class=\\\"ft-trash-2 danger\\\"></i>\\r\\n                </div>\\r\\n              </div>\\r\\n              <p>{{backLog.taskMessage}}</p>\\r\\n              <img [src]=\\\"[backLog.assignedTo]\\\" class=\\\"rounded-circle width-50 mr-2\\\"> <span class=\\\"warning\\\">{{backLog.createdOn}}</span>\\r\\n            </div>\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n\\r\\n  <section class=\\\"taskboard-app-form bg-blue-grey bg-lighten-5\\\">\\r\\n    <div class=\\\"card\\\">\\r\\n      <div class=\\\"card-block pt-3\\\">\\r\\n        <h5 class=\\\"text-bold-500\\\">Create new Task</h5>\\r\\n        <form class=\\\"taskboard-app-input row\\\">\\r\\n          <fieldset class=\\\"form-group position-relative has-icon-left col-md-4 col-12 mb-1\\\">\\r\\n            <div class=\\\"form-control-position\\\">\\r\\n              <i class=\\\"icon-emoticon-smile\\\"></i>\\r\\n            </div>\\r\\n            <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"todoTitle\\\" placeholder=\\\"Title\\\" (keydown.enter)=\\\"$event.preventDefault()\\\"\\r\\n              #todoTitle>\\r\\n            <div class=\\\"form-control-position control-position-right\\\">\\r\\n              <i class=\\\"ft-image\\\"></i>\\r\\n            </div>\\r\\n          </fieldset>\\r\\n          <fieldset class=\\\"form-group position-relative has-icon-left col-md-6 col-12 mb-1\\\">\\r\\n            <div class=\\\"form-control-position\\\">\\r\\n              <i class=\\\"icon-emoticon-smile\\\"></i>\\r\\n            </div>\\r\\n            <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"todoMessage\\\" placeholder=\\\"Message\\\" (keydown.enter)=\\\"$event.preventDefault()\\\"\\r\\n              #todoMessage>\\r\\n            <div class=\\\"form-control-position control-position-right\\\">\\r\\n              <i class=\\\"ft-image\\\"></i>\\r\\n            </div>\\r\\n          </fieldset>\\r\\n         \\r\\n          <fieldset class=\\\"form-group position-relative has-icon-left col-md-2 col-12 mb-1\\\">\\r\\n            <button type=\\\"button\\\" class=\\\"btn btn-raised btn-primary\\\" (click)=\\\"onAddTask()\\\">\\r\\n              <i class=\\\"fa fa-paper-plane-o hidden-lg-up\\\"></i> Create</button>\\r\\n          </fieldset>\\r\\n        </form>\\r\\n      </div>\\r\\n    </div>\\r\\n  </section>\\r\\n\\r\\n</section>\\r\\n<!-- Taskboard Ends -->\\r\\n\\r\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/taskboard/taskboard.component.html\n// module id = ./src/app/taskboard/taskboard.component.html\n// module chunks = taskboard.module","module.exports = \".gh-fork {\\n  position: fixed;\\n  top: 0;\\n  right: 0;\\n  border: 0; }\\n\\n/* dragula-specific example page styles */\\n\\n.dragdrop-wrapper {\\n  display: table; }\\n\\n/* .dragdrop-container {\\r\\n    display: table-cell;\\r\\n    background-color: rgba(255, 255, 255, 0.2);\\r\\n    width: 25%;\\r\\n  } */\\n\\n.dragdrop-container:nth-child(odd) {\\n  background-color: rgba(0, 0, 0, 0.2); }\\n\\n/*\\r\\n   * note that styling gu-mirror directly is a bad practice because it's too generic.\\r\\n   * you're better off giving the draggable elements a unique class and styling that directly!\\r\\n   */\\n\\n.dragdrop-container > div,\\n.gu-mirror {\\n  -webkit-transition: opacity 0.4s ease-in-out;\\n  transition: opacity 0.4s ease-in-out; }\\n\\n.dragdrop-container > div {\\n  cursor: move;\\n  cursor: grab;\\n  cursor: -webkit-grab; }\\n\\n.gu-mirror {\\n  cursor: grabbing;\\n  cursor: -webkit-grabbing; }\\n\\n.dragdrop-container .ex-moved {\\n  background-color: #e74c3c; }\\n\\n.dragdrop-container.ex-over {\\n  background-color: rgba(255, 255, 255, 0.3); }\\n\\n#left-lovehandles > div,\\n#right-lovehandles > div {\\n  cursor: initial; }\\n\\n.handle {\\n  padding: 0 5px;\\n  margin-right: 5px;\\n  background-color: rgba(0, 0, 0, 0.4);\\n  cursor: move; }\\n\\n.image-thing {\\n  margin: 20px 0;\\n  display: block;\\n  text-align: center; }\\n\\n.slack-join {\\n  position: absolute;\\n  font-weight: normal;\\n  font-size: 14px;\\n  right: 10px;\\n  top: 50%;\\n  margin-top: -8px;\\n  line-height: 16px; }\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/taskboard/taskboard.component.scss\n// module id = ./src/app/taskboard/taskboard.component.scss\n// module chunks = taskboard.module","import { Component, ViewEncapsulation, ViewChild, ElementRef } from '@angular/core';\nimport { TaskBoardService } from './taskboard.service';\nimport { Task } from './taskboard.model';\n\n@Component({\n  selector: 'app-taskboard',\n  templateUrl: './taskboard.component.html',\n  styleUrls: ['./taskboard.component.scss'],\n  providers: [TaskBoardService],\n  encapsulation: ViewEncapsulation.None\n})\nexport class TaskboardComponent  {\n\n  @ViewChild('todoTitle') titleInputRef: ElementRef;\n  @ViewChild('todoMessage') messageInputRef: ElementRef;\n  \n  public todo:Task[];\n  public inProcess:Task[];\n  public backLog:Task[];\n  public completed:Task[];\n\n  constructor(private elRef: ElementRef, private taskBoardService: TaskBoardService) {\n    this.todo = taskBoardService.todo;\n    this.inProcess = taskBoardService.inProcess;\n    this.backLog = taskBoardService.backLog;\n    this.completed = taskBoardService.completed;\n  }\n\n  onAddTask() {\n    if (this.messageInputRef.nativeElement.value != \"\" && this.titleInputRef.nativeElement.value != \"\") {\n      this.taskBoardService.addNewTask(this.titleInputRef.nativeElement.value, this.messageInputRef.nativeElement.value);\n      this.todo = this.taskBoardService.gettodo();\n    }\n    this.titleInputRef.nativeElement.value = \"\";\n    this.messageInputRef.nativeElement.value = \"\";\n    this.titleInputRef.nativeElement.focus();\n  }\n\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/taskboard/taskboard.component.ts","export class Task {\r\n    public taskTitle: string;\r\n    public taskMessage: string;\r\n    public createdOn: string;\r\n    public createdBy: string;\r\n    public assignedTo: string;\r\n    public status: string;\r\n  \r\n    constructor(taskTitle: string, taskMessage:string, createdOn: string, createdBy: string, assignedTo: string, status: string) {\r\n      this.taskTitle = taskTitle;\r\n      this.taskMessage = taskMessage;\r\n      this.createdOn = createdOn;\r\n      this.createdBy = createdBy;\r\n      this.assignedTo = assignedTo;\r\n      this.status = status;\r\n    }\r\n  }\r\n  \n\n\n// WEBPACK FOOTER //\n// ./src/app/taskboard/taskboard.model.ts","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from \"@angular/common\";\r\n\r\nimport { DragulaModule } from 'ng2-dragula';\r\nimport { TaskboardRoutingModule } from \"./taskboard-routing.module\";\r\n\r\nimport { TaskboardComponent } from \"./taskboard.component\";\r\n\r\n@NgModule({\r\n    imports: [\r\n        CommonModule,\r\n        TaskboardRoutingModule,\r\n        DragulaModule\r\n    ],\r\n    declarations: [\r\n        TaskboardComponent\r\n    ]\r\n})\r\nexport class TaskboardModule { }\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/taskboard/taskboard.module.ts","import { Injectable } from '@angular/core';\r\nimport { Task } from './taskboard.model';\r\n\r\n@Injectable()\r\nexport class TaskBoardService {\r\n\r\n    constructor() { }\r\n\r\n    public todo: Task[] = [\r\n        new Task(\r\n            'Responsive',\r\n            'Etiam porta sem malesuada magna mollis euismod.',\r\n            'May 17',\r\n            'Elizabeth Elliott',\r\n            'assets/img/portrait/small/avatar-s-3.png',\r\n            'New'),\r\n        new Task(\r\n            'QA Testing',\r\n            'Etiam porta sem malesuada magna mollis euismod.',\r\n            'May 17',\r\n            'Elizabeth Elliott',\r\n            'assets/img/portrait/small/avatar-s-3.png',\r\n            'New'),\r\n        new Task(\r\n            'Budget',\r\n            'Etiam porta sem malesuada magna mollis euismod.',\r\n            'May 17',\r\n            'Elizabeth Elliott',\r\n            'assets/img/portrait/small/avatar-s-3.png',\r\n            'New')\r\n    ];\r\n\r\n    public inProcess: Task[] = [\r\n        new Task(\r\n            'checklist',\r\n            'Etiam porta sem malesuada magna mollis euismod.',\r\n            'Apr 11',\r\n            'Bruce Reid',\r\n            'assets/img/portrait/small/avatar-s-1.png',\r\n            'In Process'),\r\n        new Task(\r\n            'Navigation',\r\n            'Etiam porta sem malesuada magna mollis euismod.',\r\n            'Apr 11',\r\n            'Bruce Reid',\r\n            'assets/img/portrait/small/avatar-s-1.png',\r\n            'In Process'),\r\n        new Task(\r\n            'Bootstrap 4',\r\n            'Etiam porta sem malesuada magna mollis euismod.',\r\n            'Apr 11',\r\n            'Bruce Reid',\r\n            'assets/img/portrait/small/avatar-s-1.png',\r\n            'In Process')\r\n    ];\r\n\r\n    public backLog: Task[] = [\r\n        new Task(\r\n            'Assessment',\r\n            'Etiam porta sem malesuada magna mollis euismod.',\r\n            'Jun 19',\r\n            'Kelly Reyes',\r\n            'assets/img/portrait/small/avatar-s-5.png',\r\n            'Pending'),\r\n        new Task(\r\n            'Schedule',\r\n            'Etiam porta sem malesuada magna mollis euismod.',\r\n            'Jun 19',\r\n            'Kelly Reyes',\r\n            'assets/img/portrait/small/avatar-s-5.png',\r\n            'Pending'),\r\n        new Task(\r\n            'Unit tests',\r\n            'Etiam porta sem malesuada magna mollis euismod.',\r\n            'Jun 19',\r\n            'Kelly Reyes',\r\n            'assets/img/portrait/small/avatar-s-5.png',\r\n            'Pending')\r\n    ];\r\n\r\n    public completed: Task[] = [\r\n        new Task(\r\n            'Angular 5',\r\n            'Etiam porta sem malesuada magna mollis euismod.',\r\n            'Aug 22',\r\n            'Sara Ali',\r\n            'assets/img/portrait/small/avatar-s-7.png',\r\n            'Completed'),\r\n        new Task(\r\n            'Fields',\r\n            'Etiam porta sem malesuada magna mollis euismod.',\r\n            'Aug 22',\r\n            'Sara Ali',\r\n            'assets/img/portrait/small/avatar-s-7.png',\r\n            'Completed'),\r\n        new Task(\r\n            'Task board',\r\n            'Etiam porta sem malesuada magna mollis euismod.',\r\n            'Aug 22',\r\n            'Sara Ali',\r\n            'assets/img/portrait/small/avatar-s-7.png',\r\n            'Completed')\r\n    ];\r\n\r\n    addNewTask(title: string, message: string) {\r\n        this.todo.push(new Task(\r\n            title,\r\n            message,\r\n            'Nov 12',\r\n            'Elizabeth Elliott',\r\n            'assets/img/portrait/small/avatar-s-3.png',\r\n            'New'\r\n        ))\r\n    }\r\n    gettodo() {\r\n        return this.todo;\r\n      }\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/app/taskboard/taskboard.service.ts"],"sourceRoot":"webpack:///"}