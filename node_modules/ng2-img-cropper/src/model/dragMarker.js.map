{"version":3,"sources":["../../../src/model/dragMarker.ts"],"names":[],"mappings":"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","file":"dragMarker.js","sourceRoot":"","sourcesContent":["import {Handle} from './handle';\nimport {PointPool} from './pointPool';\nimport {Point} from './point';\nimport {CropperSettings} from '../cropperSettings';\nimport {Bounds} from './bounds';\n\nexport class DragMarker extends Handle {\n\n    private iconPoints: Array<Point>;\n    private scaledIconPoints: Array<Point>;\n\n    constructor(x: number, y: number, radius: number, cropperSettings: CropperSettings) {\n        super(x, y, radius, cropperSettings);\n        this.iconPoints = [];\n        this.scaledIconPoints = [];\n        this.getDragIconPoints(this.iconPoints, 1);\n        this.getDragIconPoints(this.scaledIconPoints, 1.2);\n    }\n\n    public draw(ctx: CanvasRenderingContext2D) {\n        if (this.over || this.drag) {\n            this.drawIcon(ctx, this.scaledIconPoints);\n        } else {\n            this.drawIcon(ctx, this.iconPoints);\n        }\n    }\n\n    public getDragIconPoints(arr: Array<any>, scale: number) {\n        let maxLength = 17 * scale;\n        let arrowWidth = 14 * scale;\n        let arrowLength = 8 * scale;\n        let connectorThroat = 4 * scale;\n\n        arr.push(PointPool.instance.borrow(-connectorThroat / 2, maxLength - arrowLength));\n        arr.push(PointPool.instance.borrow(-arrowWidth / 2, maxLength - arrowLength));\n        arr.push(PointPool.instance.borrow(0, maxLength));\n        arr.push(PointPool.instance.borrow(arrowWidth / 2, maxLength - arrowLength));\n        arr.push(PointPool.instance.borrow(connectorThroat / 2, maxLength - arrowLength));\n        arr.push(PointPool.instance.borrow(connectorThroat / 2, connectorThroat / 2));\n        arr.push(PointPool.instance.borrow(maxLength - arrowLength, connectorThroat / 2));\n        arr.push(PointPool.instance.borrow(maxLength - arrowLength, arrowWidth / 2));\n        arr.push(PointPool.instance.borrow(maxLength, 0));\n        arr.push(PointPool.instance.borrow(maxLength - arrowLength, -arrowWidth / 2));\n        arr.push(PointPool.instance.borrow(maxLength - arrowLength, -connectorThroat / 2));\n        arr.push(PointPool.instance.borrow(connectorThroat / 2, -connectorThroat / 2));\n        arr.push(PointPool.instance.borrow(connectorThroat / 2, -maxLength + arrowLength));\n        arr.push(PointPool.instance.borrow(arrowWidth / 2, -maxLength + arrowLength));\n        arr.push(PointPool.instance.borrow(0, -maxLength));\n        arr.push(PointPool.instance.borrow(-arrowWidth / 2, -maxLength + arrowLength));\n        arr.push(PointPool.instance.borrow(-connectorThroat / 2, -maxLength + arrowLength));\n        arr.push(PointPool.instance.borrow(-connectorThroat / 2, -connectorThroat / 2));\n        arr.push(PointPool.instance.borrow(-maxLength + arrowLength, -connectorThroat / 2));\n        arr.push(PointPool.instance.borrow(-maxLength + arrowLength, -arrowWidth / 2));\n        arr.push(PointPool.instance.borrow(-maxLength, 0));\n        arr.push(PointPool.instance.borrow(-maxLength + arrowLength, arrowWidth / 2));\n        arr.push(PointPool.instance.borrow(-maxLength + arrowLength, connectorThroat / 2));\n        arr.push(PointPool.instance.borrow(-connectorThroat / 2, connectorThroat / 2));\n    }\n\n    public drawIcon(ctx: CanvasRenderingContext2D, points: Array<Point>) {\n        ctx.beginPath();\n        ctx.moveTo(points[0].x + this.position.x, points[0].y + this.position.y);\n        for (let k = 0; k < points.length; k++) {\n            let p = points[k];\n            ctx.lineTo(p.x + this.position.x, p.y + this.position.y);\n        }\n        ctx.closePath();\n        ctx.fillStyle = this.cropperSettings.cropperDrawSettings.dragIconFillColor;\n        ctx.fill();\n        ctx.lineWidth = this.cropperSettings.cropperDrawSettings.dragIconStrokeWidth;\n        ctx.strokeStyle = this.cropperSettings.cropperDrawSettings.dragIconStrokeColor;\n        ctx.stroke();\n    }\n\n    public recalculatePosition(bounds: Bounds) {\n        let c = bounds.getCentre();\n        this.setPosition(c.x, c.y);\n        PointPool.instance.returnPoint(c);\n    }\n\n}\n"]}