{"version":3,"sources":["../../src/imageCropper.ts"],"names":[],"mappings":"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","file":"imageCropper.js","sourceRoot":"","sourcesContent":["import {Bounds} from './model/bounds';\nimport {CornerMarker} from './model/cornerMarker';\nimport {CropTouch} from './model/cropTouch';\nimport {CropperSettings} from './cropperSettings';\nimport {DragMarker} from './model/dragMarker';\nimport {ImageCropperModel} from './model/imageCropperModel';\nimport {ImageCropperDataShare} from './imageCropperDataShare';\nimport {PointPool} from './model/pointPool';\nimport {Point} from './model/point';\nimport {ICornerMarker} from './model/cornerMarker';\n\nexport class ImageCropper extends ImageCropperModel {\n\n    private crop:ImageCropper;\n    private cropperSettings:CropperSettings;\n    private previousDistance:number;\n\n    constructor(cropperSettings:CropperSettings) {\n        super();\n\n        let x:number = 0;\n        let y:number = 0;\n        let width:number = cropperSettings.width;\n        let height:number = cropperSettings.height;\n        let keepAspect:boolean = cropperSettings.keepAspect;\n        let touchRadius:number = cropperSettings.touchRadius;\n        let minWidth:number = cropperSettings.minWidth;\n        let minHeight:number = cropperSettings.minHeight;\n        let croppedWidth:number = cropperSettings.croppedWidth;\n        let croppedHeight:number = cropperSettings.croppedHeight;\n\n        this.cropperSettings = cropperSettings;\n\n        this.crop = this;\n        this.x = x;\n        this.y = y;\n\n        if (width === void 0) {\n            this.width = 100;\n        }\n        if (height === void 0) {\n            this.height = 50;\n        }\n        if (keepAspect === void 0) {\n            this.keepAspect = true;\n        }\n        if (touchRadius === void 0) {\n            this.touchRadius = 20;\n        }\n        this.minWidth = minWidth;\n        this.minHeight = minHeight;\n        this.keepAspect = false;\n        this.aspectRatio = 0;\n        this.currentDragTouches = [];\n        this.isMouseDown = false;\n        this.ratioW = 1;\n        this.ratioH = 1;\n        this.fileType = cropperSettings.fileType;\n        this.imageSet = false;\n        this.pointPool = new PointPool(200);\n\n        this.tl = new CornerMarker(x, y, touchRadius, this.cropperSettings);\n        this.tr = new CornerMarker(x + width, y, touchRadius, this.cropperSettings);\n        this.bl = new CornerMarker(x, y + height, touchRadius, this.cropperSettings);\n        this.br = new CornerMarker(x + width, y + height, touchRadius, this.cropperSettings);\n\n        this.tl.addHorizontalNeighbour(this.tr);\n        this.tl.addVerticalNeighbour(this.bl);\n        this.tr.addHorizontalNeighbour(this.tl);\n        this.tr.addVerticalNeighbour(this.br);\n        this.bl.addHorizontalNeighbour(this.br);\n        this.bl.addVerticalNeighbour(this.tl);\n        this.br.addHorizontalNeighbour(this.bl);\n        this.br.addVerticalNeighbour(this.tr);\n        this.markers = [this.tl, this.tr, this.bl, this.br];\n\n\n        this.center = new DragMarker(x + (width / 2), y + (height / 2), touchRadius, this.cropperSettings);\n        this.keepAspect = keepAspect;\n        this.aspectRatio = height / width;\n        this.croppedImage = new Image();\n        this.currentlyInteracting = false;\n        this.cropWidth = croppedWidth;\n        this.cropHeight = croppedHeight;\n    }\n\n    private static sign(x:number):number {\n        if (+x === x) {\n            return (x === 0) ? x : (x > 0) ? 1 : -1;\n        }\n        return NaN;\n    }\n\n    private static getMousePos(canvas:HTMLCanvasElement, evt:MouseEvent):Point {\n        let rect = canvas.getBoundingClientRect();\n        return PointPool.instance.borrow(evt.clientX - rect.left, evt.clientY - rect.top);\n    }\n\n    private static getTouchPos(canvas:HTMLCanvasElement, touch:Touch):Point {\n        let rect = canvas.getBoundingClientRect();\n        return PointPool.instance.borrow(touch.clientX - rect.left, touch.clientY - rect.top);\n    }\n\n    private static detectVerticalSquash(img:HTMLImageElement | HTMLCanvasElement | HTMLVideoElement) {\n        let ih = img.height;\n        let canvas = document.createElement('canvas');\n        canvas.width = 1;\n        canvas.height = ih;\n        let ctx = <CanvasRenderingContext2D> canvas.getContext('2d');\n        ctx.drawImage(img, 0, 0);\n        let imageData:any = ctx.getImageData(0, 0, 1, ih)\n        if (imageData) {\n            let data = imageData.data;\n            // search image edge pixel position in case it is squashed vertically.\n            let sy = 0;\n            let ey = ih;\n            let py = ih;\n            while (py > sy) {\n                let alpha = data[(py - 1) * 4 + 3];\n                if (alpha === 0) {\n                    ey = py;\n                } else {\n                    sy = py;\n                }\n                py = (ey + sy) >> 1;\n            }\n            let ratio = (py / ih);\n            return (ratio === 0) ? 1 : ratio;\n        } else {\n            return 1;\n        }\n    }\n\n    private getDataUriMimeType(dataUri:string) {\n        // Get a substring because the regex does not perform well on very large strings. Cater for optional charset. Length 50 shoould be enough.\n        let dataUriSubstring = dataUri.substring(0, 50);\n        let mimeType = 'image/png';\n        // data-uri scheme\n        // data:[<media type>][;charset=<character set>][;base64],<data>\n        let regEx = RegExp(/^(data:)([\\w\\/\\+]+);(charset=[\\w-]+|base64).*,(.*)/gi);\n        let matches = regEx.exec(dataUriSubstring);\n        if (matches && matches[2]) {\n            mimeType = matches[2];\n            if (mimeType == 'image/jpg') {\n                mimeType = 'image/jpeg';\n            }\n        }\n        return mimeType;\n    }\n\n    public prepare(canvas:HTMLCanvasElement) {\n        this.buffer = document.createElement('canvas');\n        this.cropCanvas = document.createElement('canvas');\n\n        // todo get more reliable parent width value.\n        let responsiveWidth:number = canvas.parentElement ? canvas.parentElement.clientWidth : 0;\n        if (responsiveWidth > 0 && this.cropperSettings.dynamicSizing) {\n            this.cropCanvas.width = responsiveWidth;\n            this.buffer.width = responsiveWidth;\n            canvas.width = responsiveWidth;\n        } else {\n            this.cropCanvas.width = this.cropWidth;\n            this.buffer.width = canvas.width;\n        }\n\n        this.cropCanvas.height = this.cropHeight;\n        this.buffer.height = canvas.height;\n        this.canvas = canvas;\n        this.ctx = <CanvasRenderingContext2D> this.canvas.getContext('2d');\n\n        this.draw(this.ctx);\n    }\n\n    public resizeCanvas(width:number, height:number, setImage:boolean = false):void {\n        this.canvas.width = this.cropCanvas.width = this.width = this.canvasWidth = this.buffer.width = width;\n        this.canvas.height = this.cropCanvas.height = this.height = this.canvasHeight = this.buffer.height = height;\n        if (setImage) {\n            this.setImage(this.srcImage);\n        }\n    }\n\n    public reset():void {\n        this.setImage(undefined);\n    }\n\n    public draw(ctx:CanvasRenderingContext2D):void {\n        let bounds:Bounds = this.getBounds();\n        if (this.srcImage) {\n            ctx.clearRect(0, 0, this.canvasWidth, this.canvasHeight);\n            let sourceAspect:number = this.srcImage.height / this.srcImage.width;\n            let canvasAspect:number = this.canvasHeight / this.canvasWidth;\n            let w:number = this.canvasWidth;\n            let h:number = this.canvasHeight;\n            if (canvasAspect > sourceAspect) {\n                w = this.canvasWidth;\n                h = this.canvasWidth * sourceAspect;\n            } else {\n                h = this.canvasHeight;\n                w = this.canvasHeight / sourceAspect;\n            }\n            this.ratioW = w / this.srcImage.width;\n            this.ratioH = h / this.srcImage.height;\n            if (canvasAspect < sourceAspect) {\n                this.drawImageIOSFix(ctx, this.srcImage, 0, 0, this.srcImage.width, this.srcImage.height,\n                    this.buffer.width / 2 - w / 2, 0, w, h);\n            } else {\n                this.drawImageIOSFix(ctx, this.srcImage, 0, 0, this.srcImage.width, this.srcImage.height, 0,\n                    this.buffer.height / 2 - h / 2, w, h);\n            }\n            (<CanvasRenderingContext2D> this.buffer.getContext('2d'))\n                .drawImage(this.canvas, 0, 0, this.canvasWidth, this.canvasHeight);\n\n            ctx.lineWidth = this.cropperSettings.cropperDrawSettings.strokeWidth;\n            ctx.strokeStyle = this.cropperSettings.cropperDrawSettings.strokeColor; // 'rgba(255,228,0,1)';\n\n            if (!this.cropperSettings.rounded) {\n                ctx.fillStyle = 'rgba(0, 0, 0, 0.6)';\n                ctx.fillRect(0, 0, this.canvasWidth, this.canvasHeight);\n                ctx.drawImage(this.buffer, bounds.left, bounds.top, Math.max(bounds.width, 1),\n                    Math.max(bounds.height, 1), bounds.left, bounds.top, bounds.width, bounds.height);\n                ctx.strokeRect(bounds.left, bounds.top, bounds.width, bounds.height);\n            } else {\n                ctx.beginPath();\n                ctx.arc(bounds.left + bounds.width / 2, bounds.top + bounds.height / 2, bounds.width / 2, 0,\n                    Math.PI * 2, true);\n                ctx.closePath();\n                ctx.stroke();\n            }\n\n            let marker:CornerMarker;\n\n            for (let i = 0; i < this.markers.length; i++) {\n                marker = this.markers[i];\n                marker.draw(ctx);\n            }\n            this.center.draw(ctx);\n        } else {\n            ctx.fillStyle = 'rgba(192,192,192,1)';\n            ctx.fillRect(0, 0, this.canvas.width, this.canvas.height);\n        }\n    }\n\n    public dragCenter(x:number, y:number, marker:DragMarker) {\n        let bounds = this.getBounds();\n        let left = x - (bounds.width / 2);\n        let right = x + (bounds.width / 2);\n        let top = y - (bounds.height / 2);\n        let bottom = y + (bounds.height / 2);\n        if (right >= this.maxXClamp) {\n            x = this.maxXClamp - bounds.width / 2;\n        }\n        if (left <= this.minXClamp) {\n            x = bounds.width / 2 + this.minXClamp;\n        }\n        if (top < this.minYClamp) {\n            y = bounds.height / 2 + this.minYClamp;\n        }\n        if (bottom >= this.maxYClamp) {\n            y = this.maxYClamp - bounds.height / 2;\n        }\n        this.tl.moveX(x - (bounds.width / 2));\n        this.tl.moveY(y - (bounds.height / 2));\n        this.tr.moveX(x + (bounds.width / 2));\n        this.tr.moveY(y - (bounds.height / 2));\n        this.bl.moveX(x - (bounds.width / 2));\n        this.bl.moveY(y + (bounds.height / 2));\n        this.br.moveX(x + (bounds.width / 2));\n        this.br.moveY(y + (bounds.height / 2));\n        marker.setPosition(x, y);\n    }\n\n    public enforceMinSize(x:number, y:number, marker:CornerMarker) {\n\n        let xLength = x - marker.getHorizontalNeighbour().position.x;\n        let yLength = y - marker.getVerticalNeighbour().position.y;\n        let xOver = this.minWidth - Math.abs(xLength);\n        let yOver = this.minHeight - Math.abs(yLength);\n\n        if (xLength === 0 || yLength === 0) {\n            x = marker.position.x;\n            y = marker.position.y;\n\n            return PointPool.instance.borrow(x, y);\n        }\n\n        if (this.keepAspect) {\n            if (xOver > 0 && (yOver / this.aspectRatio) > 0) {\n                if (xOver > (yOver / this.aspectRatio)) {\n                    if (xLength < 0) {\n                        x -= xOver;\n\n                        if (yLength < 0) {\n                            y -= xOver * this.aspectRatio;\n                        } else {\n                            y += xOver * this.aspectRatio;\n                        }\n                    } else {\n                        x += xOver;\n                        if (yLength < 0) {\n                            y -= xOver * this.aspectRatio;\n                        } else {\n                            y += xOver * this.aspectRatio;\n                        }\n                    }\n                } else {\n                    if (yLength < 0) {\n                        y -= yOver;\n\n                        if (xLength < 0) {\n                            x -= yOver / this.aspectRatio;\n                        } else {\n                            x += yOver / this.aspectRatio;\n                        }\n\n                    } else {\n                        y += yOver;\n                        if (xLength < 0) {\n                            x -= yOver / this.aspectRatio;\n                        } else {\n                            x += yOver / this.aspectRatio;\n                        }\n                    }\n                }\n            } else {\n                if (xOver > 0) {\n                    if (xLength < 0) {\n                        x -= xOver;\n                        if (yLength < 0) {\n                            y -= xOver * this.aspectRatio;\n                        } else {\n                            y += xOver * this.aspectRatio;\n                        }\n                    } else {\n                        x += xOver;\n                        if (yLength < 0) {\n                            y -= xOver * this.aspectRatio;\n                        } else {\n                            y += xOver * this.aspectRatio;\n                        }\n                    }\n                } else {\n                    if (yOver > 0) {\n                        if (yLength < 0) {\n                            y -= yOver;\n\n                            if (xLength < 0) {\n                                x -= yOver / this.aspectRatio;\n                            } else {\n                                x += yOver / this.aspectRatio;\n                            }\n                        } else {\n                            y += yOver;\n                            if (xLength < 0) {\n                                x -= yOver / this.aspectRatio;\n                            } else {\n                                x += yOver / this.aspectRatio;\n                            }\n                        }\n                    }\n                }\n            }\n        } else {\n            if (xOver > 0) {\n                if (xLength < 0) {\n                    x -= xOver;\n                } else {\n                    x += xOver;\n                }\n            }\n            if (yOver > 0) {\n                if (yLength < 0) {\n                    y -= yOver;\n                } else {\n                    y += yOver;\n                }\n            }\n        }\n\n        if (x < this.minXClamp || x > this.maxXClamp || y < this.minYClamp || y > this.maxYClamp) {\n            x = marker.position.x;\n            y = marker.position.y;\n        }\n\n        return PointPool.instance.borrow(x, y);\n    }\n\n    public dragCorner(x:number, y:number, marker:CornerMarker) {\n        let iX:number = 0;\n        let iY:number = 0;\n        let ax:number = 0;\n        let ay:number = 0;\n        let newHeight:number = 0;\n        let newWidth:number = 0;\n        let newY:number = 0;\n        let newX:number = 0;\n        let anchorMarker:CornerMarker;\n        let fold:number = 0;\n\n        if (this.keepAspect) {\n            anchorMarker = marker.getHorizontalNeighbour().getVerticalNeighbour();\n            ax = anchorMarker.position.x;\n            ay = anchorMarker.position.y;\n            if (x <= anchorMarker.position.x) {\n                if (y <= anchorMarker.position.y) {\n                    iX = ax - (100 / this.aspectRatio);\n                    iY = ay - (100 / this.aspectRatio * this.aspectRatio);\n                    fold = this.getSide(PointPool.instance.borrow(iX, iY), anchorMarker.position,\n                        PointPool.instance.borrow(x, y));\n                    if (fold > 0) {\n                        newHeight = Math.abs(anchorMarker.position.y - y);\n                        newWidth = newHeight / this.aspectRatio;\n                        newY = anchorMarker.position.y - newHeight;\n                        newX = anchorMarker.position.x - newWidth;\n                        let min = this.enforceMinSize(newX, newY, marker);\n                        marker.move(min.x, min.y);\n                        PointPool.instance.returnPoint(min);\n                    } else {\n                        if (fold < 0) {\n                            newWidth = Math.abs(anchorMarker.position.x - x);\n                            newHeight = newWidth * this.aspectRatio;\n                            newY = anchorMarker.position.y - newHeight;\n                            newX = anchorMarker.position.x - newWidth;\n                            let min = this.enforceMinSize(newX, newY, marker);\n                            marker.move(min.x, min.y);\n                            PointPool.instance.returnPoint(min);\n                        }\n                    }\n                } else {\n                    iX = ax - (100 / this.aspectRatio);\n                    iY = ay + (100 / this.aspectRatio * this.aspectRatio);\n                    fold = this.getSide(PointPool.instance.borrow(iX, iY), anchorMarker.position,\n                        PointPool.instance.borrow(x, y));\n                    if (fold > 0) {\n                        newWidth = Math.abs(anchorMarker.position.x - x);\n                        newHeight = newWidth * this.aspectRatio;\n                        newY = anchorMarker.position.y + newHeight;\n                        newX = anchorMarker.position.x - newWidth;\n                        let min = this.enforceMinSize(newX, newY, marker);\n                        marker.move(min.x, min.y);\n                        PointPool.instance.returnPoint(min);\n                    } else {\n                        if (fold < 0) {\n                            newHeight = Math.abs(anchorMarker.position.y - y);\n                            newWidth = newHeight / this.aspectRatio;\n                            newY = anchorMarker.position.y + newHeight;\n                            newX = anchorMarker.position.x - newWidth;\n                            let min = this.enforceMinSize(newX, newY, marker);\n                            marker.move(min.x, min.y);\n                            PointPool.instance.returnPoint(min);\n                        }\n                    }\n                }\n            } else {\n                if (y <= anchorMarker.position.y) {\n                    iX = ax + (100 / this.aspectRatio);\n                    iY = ay - (100 / this.aspectRatio * this.aspectRatio);\n                    fold = this.getSide(PointPool.instance.borrow(iX, iY), anchorMarker.position,\n                        PointPool.instance.borrow(x, y));\n                    if (fold < 0) {\n                        newHeight = Math.abs(anchorMarker.position.y - y);\n                        newWidth = newHeight / this.aspectRatio;\n                        newY = anchorMarker.position.y - newHeight;\n                        newX = anchorMarker.position.x + newWidth;\n                        let min = this.enforceMinSize(newX, newY, marker);\n                        marker.move(min.x, min.y);\n                        PointPool.instance.returnPoint(min);\n                    } else {\n                        if (fold > 0) {\n                            newWidth = Math.abs(anchorMarker.position.x - x);\n                            newHeight = newWidth * this.aspectRatio;\n                            newY = anchorMarker.position.y - newHeight;\n                            newX = anchorMarker.position.x + newWidth;\n                            let min = this.enforceMinSize(newX, newY, marker);\n                            marker.move(min.x, min.y);\n                            PointPool.instance.returnPoint(min);\n                        }\n                    }\n                } else {\n                    iX = ax + (100 / this.aspectRatio);\n                    iY = ay + (100 / this.aspectRatio * this.aspectRatio);\n                    fold = this.getSide(PointPool.instance.borrow(iX, iY), anchorMarker.position,\n                        PointPool.instance.borrow(x, y));\n                    if (fold < 0) {\n                        newWidth = Math.abs(anchorMarker.position.x - x);\n                        newHeight = newWidth * this.aspectRatio;\n                        newY = anchorMarker.position.y + newHeight;\n                        newX = anchorMarker.position.x + newWidth;\n                        let min = this.enforceMinSize(newX, newY, marker);\n                        marker.move(min.x, min.y);\n                        PointPool.instance.returnPoint(min);\n                    } else {\n                        if (fold > 0) {\n                            newHeight = Math.abs(anchorMarker.position.y - y);\n                            newWidth = newHeight / this.aspectRatio;\n                            newY = anchorMarker.position.y + newHeight;\n                            newX = anchorMarker.position.x + newWidth;\n                            let min = this.enforceMinSize(newX, newY, marker);\n                            marker.move(min.x, min.y);\n                            PointPool.instance.returnPoint(min);\n                        }\n                    }\n                }\n            }\n        } else {\n            let min = this.enforceMinSize(x, y, marker);\n            marker.move(min.x, min.y);\n            PointPool.instance.returnPoint(min);\n        }\n        this.center.recalculatePosition(this.getBounds());\n    }\n\n    public getSide(a:Point, b:Point, c:Point):number {\n        let n:number = ImageCropper.sign((b.x - a.x) * (c.y - a.y) - (b.y - a.y) * (c.x - a.x));\n\n        // TODO move the return of the pools to outside of this function\n        PointPool.instance.returnPoint(a);\n        PointPool.instance.returnPoint(c);\n        return n;\n    }\n\n    public handleRelease(newCropTouch:CropTouch) {\n\n        if (newCropTouch == null) {\n            return;\n        }\n        let index = 0;\n        for (let k = 0; k < this.currentDragTouches.length; k++) {\n            if (newCropTouch.id === this.currentDragTouches[k].id) {\n                this.currentDragTouches[k].dragHandle.setDrag(false);\n                index = k;\n            }\n        }\n        this.currentDragTouches.splice(index, 1);\n        this.draw(this.ctx);\n    }\n\n    public handleMove(newCropTouch:CropTouch) {\n        let matched = false;\n        for (let k = 0; k < this.currentDragTouches.length; k++) {\n            if (newCropTouch.id === this.currentDragTouches[k].id && this.currentDragTouches[k].dragHandle != null) {\n                let dragTouch:CropTouch = this.currentDragTouches[k];\n                let clampedPositions = this.clampPosition(newCropTouch.x - dragTouch.dragHandle.offset.x,\n                    newCropTouch.y - dragTouch.dragHandle.offset.y);\n                newCropTouch.x = clampedPositions.x;\n                newCropTouch.y = clampedPositions.y;\n                PointPool.instance.returnPoint(clampedPositions);\n                if (dragTouch.dragHandle instanceof CornerMarker) {\n                    this.dragCorner(newCropTouch.x, newCropTouch.y, (dragTouch.dragHandle as CornerMarker));\n                } else {\n                    this.dragCenter(newCropTouch.x, newCropTouch.y, (dragTouch.dragHandle as DragMarker));\n                }\n                this.currentlyInteracting = true;\n                matched = true;\n                ImageCropperDataShare.setPressed(this.canvas);\n                break;\n            }\n        }\n        if (!matched) {\n            for (let i = 0; i < this.markers.length; i++) {\n                let marker:ICornerMarker = this.markers[i];\n                if (marker.touchInBounds(newCropTouch.x, newCropTouch.y)) {\n                    newCropTouch.dragHandle = marker;\n                    this.currentDragTouches.push(newCropTouch);\n                    marker.setDrag(true);\n                    newCropTouch.dragHandle.offset.x = newCropTouch.x - newCropTouch.dragHandle.position.x;\n                    newCropTouch.dragHandle.offset.y = newCropTouch.y - newCropTouch.dragHandle.position.y;\n                    this.dragCorner(newCropTouch.x - newCropTouch.dragHandle.offset.x,\n                        newCropTouch.y - newCropTouch.dragHandle.offset.y, (newCropTouch.dragHandle as CornerMarker));\n                    break;\n                }\n            }\n            if (newCropTouch.dragHandle === null || typeof newCropTouch.dragHandle === 'undefined') {\n                if (this.center.touchInBounds(newCropTouch.x, newCropTouch.y)) {\n                    newCropTouch.dragHandle = this.center;\n                    this.currentDragTouches.push(newCropTouch);\n                    newCropTouch.dragHandle.setDrag(true);\n                    newCropTouch.dragHandle.offset.x = newCropTouch.x - newCropTouch.dragHandle.position.x;\n                    newCropTouch.dragHandle.offset.y = newCropTouch.y - newCropTouch.dragHandle.position.y;\n                    this.dragCenter(newCropTouch.x - newCropTouch.dragHandle.offset.x,\n                        newCropTouch.y - newCropTouch.dragHandle.offset.y, (newCropTouch.dragHandle as DragMarker));\n                }\n            }\n        }\n    }\n\n    public updateClampBounds() {\n        let sourceAspect = this.srcImage.height / this.srcImage.width;\n        let canvasAspect = this.canvas.height / this.canvas.width;\n        let w = this.canvas.width;\n        let h = this.canvas.height;\n        if (canvasAspect > sourceAspect) {\n            w = this.canvas.width;\n            h = this.canvas.width * sourceAspect;\n        } else {\n            h = this.canvas.height;\n            w = this.canvas.height / sourceAspect;\n        }\n        this.minXClamp = this.canvas.width / 2 - w / 2;\n        this.minYClamp = this.canvas.height / 2 - h / 2;\n        this.maxXClamp = this.canvas.width / 2 + w / 2;\n        this.maxYClamp = this.canvas.height / 2 + h / 2;\n    }\n\n    public getCropBounds() {\n        let bounds = this.getBounds();\n        bounds.top = Math.round(( bounds.top - this.minYClamp) / this.ratioH);\n        bounds.bottom = Math.round(( bounds.bottom - this.minYClamp) / this.ratioH);\n        bounds.left = Math.round((bounds.left - this.minXClamp) / this.ratioW);\n        bounds.right = Math.round((bounds.right - this.minXClamp) / this.ratioW);\n        return bounds;\n    }\n\n    public clampPosition(x:number, y:number) {\n        if (x < this.minXClamp) {\n            x = this.minXClamp;\n        }\n        if (x > this.maxXClamp) {\n            x = this.maxXClamp;\n        }\n        if (y < this.minYClamp) {\n            y = this.minYClamp;\n        }\n        if (y > this.maxYClamp) {\n            y = this.maxYClamp;\n        }\n        return PointPool.instance.borrow(x, y);\n    }\n\n    public isImageSet() {\n        return this.imageSet;\n    }\n\n    public setImage(img:any) {\n        this.srcImage = img;\n        if (!img) {\n            this.imageSet = false;\n            this.draw(this.ctx);\n        } else {\n            this.imageSet = true;\n            this.ctx.clearRect(0, 0, this.canvas.width, this.canvas.height);\n            let bufferContext = <CanvasRenderingContext2D> this.buffer.getContext('2d');\n            bufferContext.clearRect(0, 0, this.buffer.width, this.buffer.height);\n\n            if (!this.cropperSettings.fileType)\n                this.fileType = this.getDataUriMimeType(img.src);\n\n            if (this.cropperSettings.minWithRelativeToResolution) {\n                this.minWidth = (this.canvas.width * this.cropperSettings.minWidth / this.srcImage.width);\n                this.minHeight = (this.canvas.height * this.cropperSettings.minHeight / this.srcImage.height);\n            }\n\n            this.updateClampBounds();\n            this.canvasWidth = this.canvas.width;\n            this.canvasHeight = this.canvas.height;\n\n            let cropPosition:Point[] = this.getCropPositionFromMarkers();\n            this.setCropPosition(cropPosition);\n        }\n    }\n\n    public updateCropPosition(cropBounds:Bounds):void {\n        let cropPosition:Point[] = this.getCropPositionFromBounds(cropBounds);\n        this.setCropPosition(cropPosition);\n    }\n\n    private setCropPosition(cropPosition:Point[]):void {\n        this.tl.setPosition(cropPosition[0].x, cropPosition[0].y);\n        this.tr.setPosition(cropPosition[1].x, cropPosition[1].y);\n        this.bl.setPosition(cropPosition[2].x, cropPosition[2].y);\n        this.br.setPosition(cropPosition[3].x, cropPosition[3].y);\n        this.center.setPosition(cropPosition[4].x, cropPosition[4].y);\n\n        for (let position of cropPosition) {\n            PointPool.instance.returnPoint(position);\n        }\n\n        this.vertSquashRatio = ImageCropper.detectVerticalSquash(this.srcImage);\n        this.draw(this.ctx);\n        this.croppedImage = this.getCroppedImageHelper(false, this.cropWidth, this.cropHeight);\n    }\n\n    private getCropPositionFromMarkers():Point[] {\n        let w:number = this.canvas.width;\n        let h:number = this.canvas.height;\n        let tlPos:Point, trPos:Point, blPos:Point, brPos:Point, center:Point;\n        let sourceAspect:number = this.srcImage.height / this.srcImage.width;\n        let cropBounds:Bounds = this.getBounds();\n        let cropAspect:number = cropBounds.height / cropBounds.width;\n        let cX:number = this.canvas.width / 2;\n        let cY:number = this.canvas.height / 2;\n\n        if (cropAspect > sourceAspect) {\n            let imageH = Math.min(w * sourceAspect, h);\n            let cropW = imageH / cropAspect;\n            tlPos = PointPool.instance.borrow(cX - cropW / 2, cY + imageH / 2);\n            trPos = PointPool.instance.borrow(cX + cropW / 2, cY + imageH / 2);\n            blPos = PointPool.instance.borrow(cX - cropW / 2, cY - imageH / 2);\n            brPos = PointPool.instance.borrow(cX + cropW / 2, cY - imageH / 2);\n        } else {\n            let imageW = Math.min(h / sourceAspect, w);\n            let cropH = imageW * cropAspect;\n            tlPos = PointPool.instance.borrow(cX - imageW / 2, cY + cropH / 2);\n            trPos = PointPool.instance.borrow(cX + imageW / 2, cY + cropH / 2);\n            blPos = PointPool.instance.borrow(cX - imageW / 2, cY - cropH / 2);\n            brPos = PointPool.instance.borrow(cX + imageW / 2, cY - cropH / 2);\n        }\n\n        center = PointPool.instance.borrow(cX, cY);\n        let positions:Point[] = [tlPos, trPos, blPos, brPos, center];\n        return positions;\n    }\n\n    private getCropPositionFromBounds(cropPosition:Bounds):Point[] {\n        let marginTop = 0;\n        let marginLeft = 0;\n        let canvasAspect:number = this.canvasHeight / this.canvasWidth;\n        let sourceAspect:number = this.srcImage.height / this.srcImage.width;\n\n        if (canvasAspect > sourceAspect) {\n            marginTop = this.buffer.height / 2 - (this.canvasWidth * sourceAspect) / 2;\n        } else {\n            marginLeft = this.buffer.width / 2 - (this.canvasHeight / sourceAspect) / 2;\n        }\n\n        let ratioW:number = (this.canvasWidth - marginLeft * 2) / this.srcImage.width;\n        let ratioH:number = (this.canvasHeight - marginTop * 2) / this.srcImage.height;\n\n        let actualH:number = cropPosition.height * ratioH;\n        let actualW:number = cropPosition.width * ratioW;\n        let actualX:number = cropPosition.left * ratioW + marginLeft;\n        let actualY:number = cropPosition.top * ratioH + marginTop;\n\n        if (this.keepAspect) {\n            let scaledW:number = actualH / this.aspectRatio;\n            let scaledH:number = actualW * this.aspectRatio;\n\n            if (this.getCropBounds().height === cropPosition.height) { // only width changed\n                actualH = scaledH;\n            } else if (this.getCropBounds().width === cropPosition.width) { // only height changed\n                actualW = scaledW;\n            } else { // height and width changed\n                if (Math.abs(scaledH - actualH) < Math.abs(scaledW - actualW)) {\n                    actualW = scaledW;\n                } else {\n                    actualH = scaledH;\n                }\n            }\n        }\n\n        let tlPos:Point = PointPool.instance.borrow(actualX, actualY + actualH);\n        let trPos:Point = PointPool.instance.borrow(actualX + actualW, actualY + actualH);\n        let blPos:Point = PointPool.instance.borrow(actualX, actualY);\n        let brPos:Point = PointPool.instance.borrow(actualX + actualW, actualY);\n        let center:Point = PointPool.instance.borrow(actualX + actualW / 2, actualY + actualH / 2);\n\n        let positions:Point[] = [tlPos, trPos, blPos, brPos, center];\n        return positions;\n    }\n\n    public getCroppedImageHelper(preserveSize?:boolean, fillWidth?:number, fillHeight?:number):HTMLImageElement {\n        if (this.cropperSettings.cropOnResize) {\n            return this.getCroppedImage(preserveSize, fillWidth, fillHeight);\n        }\n        return this.croppedImage? this.croppedImage : document.createElement('img');\n    }\n\n    // todo: Unused parameters?\n    public getCroppedImage(preserveSize?:boolean, fillWidth?:number, fillHeight?:number):HTMLImageElement {\n        let bounds:Bounds = this.getBounds();\n        if (!this.srcImage) {\n            return document.createElement('img');\n        } else {\n            let sourceAspect:number = this.srcImage.height / this.srcImage.width;\n            let canvasAspect:number = this.canvas.height / this.canvas.width;\n            let w:number = this.canvas.width;\n            let h:number = this.canvas.height;\n            if (canvasAspect > sourceAspect) {\n                w = this.canvas.width;\n                h = this.canvas.width * sourceAspect;\n            } else {\n                if (canvasAspect < sourceAspect) {\n                    h = this.canvas.height;\n                    w = this.canvas.height / sourceAspect;\n                } else {\n                    h = this.canvas.height;\n                    w = this.canvas.width;\n                }\n            }\n            this.ratioW = w / this.srcImage.width;\n            this.ratioH = h / this.srcImage.height;\n            let offsetH:number = (this.buffer.height - h) / 2 / this.ratioH;\n            let offsetW:number = (this.buffer.width - w) / 2 / this.ratioW;\n\n            let ctx = <CanvasRenderingContext2D> this.cropCanvas.getContext('2d');\n\n\n            if (this.cropperSettings.preserveSize || preserveSize) {\n                var width = Math.round(bounds.right/this.ratioW - bounds.left/this.ratioW);\n                var height = Math.round(bounds.bottom/this.ratioH - bounds.top/this.ratioH);\n\n                this.cropCanvas.width = width;\n                this.cropCanvas.height = height;\n\n                this.cropperSettings.croppedWidth = this.cropCanvas.width;\n                this.cropperSettings.croppedHeight = this.cropCanvas.height;\n            } else {\n                this.cropCanvas.width = this.cropWidth;\n                this.cropCanvas.height = this.cropHeight;\n            }\n\n            ctx.clearRect(0, 0, this.cropCanvas.width, this.cropCanvas.height);\n            this.drawImageIOSFix(ctx, this.srcImage,\n                Math.max(Math.round((bounds.left) / this.ratioW - offsetW), 0),\n                Math.max(Math.round(bounds.top / this.ratioH - offsetH), 0),\n                Math.max(Math.round(bounds.width / this.ratioW), 1), Math.max(Math.round(bounds.height / this.ratioH), 1),\n                0, 0, this.cropCanvas.width, this.cropCanvas.height\n            );\n\n            if (this.cropperSettings.resampleFn) {\n                this.cropperSettings.resampleFn(this.cropCanvas);\n            }\n\n            this.croppedImage.width = this.cropCanvas.width;\n            this.croppedImage.height = this.cropCanvas.height;\n            this.croppedImage.src = this.cropCanvas.toDataURL(this.fileType, this.cropperSettings.compressRatio);\n            return this.croppedImage;\n        }\n    }\n\n    public getBounds():Bounds {\n        let minX = Number.MAX_VALUE;\n        let minY = Number.MAX_VALUE;\n        let maxX = -Number.MAX_VALUE;\n        let maxY = -Number.MAX_VALUE;\n        for (let i = 0; i < this.markers.length; i++) {\n            let marker = this.markers[i];\n            if (marker.position.x < minX) {\n                minX = marker.position.x;\n            }\n            if (marker.position.x > maxX) {\n                maxX = marker.position.x;\n            }\n            if (marker.position.y < minY) {\n                minY = marker.position.y;\n            }\n            if (marker.position.y > maxY) {\n                maxY = marker.position.y;\n            }\n        }\n        let bounds:Bounds = new Bounds();\n        bounds.left = minX;\n        bounds.right = maxX;\n        bounds.top = minY;\n        bounds.bottom = maxY;\n        return bounds;\n    }\n\n    public setBounds(bounds:any) {\n\n        let topLeft:CornerMarker;\n        let topRight:CornerMarker;\n        let bottomLeft:CornerMarker;\n        let bottomRight:CornerMarker;\n\n        let currentBounds = this.getBounds();\n        for (let i = 0; i < this.markers.length; i++) {\n            let marker = this.markers[i];\n\n            if (marker.position.x === currentBounds.left) {\n                if (marker.position.y === currentBounds.top) {\n                    marker.setPosition(bounds.left, bounds.top);\n                } else {\n                    marker.setPosition(bounds.left, bounds.bottom);\n                }\n            } else {\n                if (marker.position.y === currentBounds.top) {\n                    marker.setPosition(bounds.right, bounds.top);\n                } else {\n                    marker.setPosition(bounds.right, bounds.bottom);\n                }\n            }\n        }\n\n        this.center.recalculatePosition(bounds);\n        this.center.draw(this.ctx);\n        this.draw(this.ctx); // we need to redraw all canvas if we have changed bounds\n    }\n\n    public onTouchMove(event:TouchEvent) {\n        if (this.crop.isImageSet()) {\n            event.preventDefault();\n            if (event.touches.length === 1) {\n                for (let i = 0; i < event.touches.length; i++) {\n                    let touch = event.touches[i];\n                    let touchPosition = ImageCropper.getTouchPos(this.canvas, touch);\n                    let cropTouch = new CropTouch(touchPosition.x, touchPosition.y, touch.identifier);\n                    PointPool.instance.returnPoint(touchPosition);\n                    this.move(cropTouch);\n                }\n            } else {\n                if (event.touches.length === 2) {\n\n                    const distance = ((event.touches[0].clientX - event.touches[1].clientX) * (event.touches[0].clientX - event.touches[1].clientX)) + ((event.touches[0].clientY - event.touches[1].clientY) * (event.touches[0].clientY - event.touches[1].clientY));\n                    if (this.previousDistance && this.previousDistance !== distance) {\n                        let bounds = this.getBounds();\n\n                        if (distance < this.previousDistance) {\n                            bounds.top += 1;\n                            bounds.left += 1;\n                            bounds.right -= 1;\n                            bounds.bottom -= 1;\n                        }\n\n                        if (distance > this.previousDistance) {\n                            if (bounds.top !== this.minYClamp && bounds.bottom !== this.maxYClamp && bounds.left !== this.minXClamp && bounds.right !== this.maxXClamp) { // none\n                                bounds.top -= 1;\n                                bounds.left -= 1;\n                                bounds.right += 1;\n                                bounds.bottom += 1;\n                            } else if (bounds.top !== this.minYClamp && bounds.bottom !== this.maxYClamp && bounds.left === this.minXClamp && bounds.right !== this.maxXClamp) { // left\n                                bounds.top -= 1;\n                                bounds.right += 2;\n                                bounds.bottom += 1;\n                            } else if (bounds.top !== this.minYClamp && bounds.bottom !== this.maxYClamp && bounds.left !== this.minXClamp && bounds.right === this.maxXClamp) { // right\n                                bounds.top -= 1;\n                                bounds.left -= 2;\n                                bounds.bottom += 1;\n                            } else if (bounds.top === this.minYClamp && bounds.bottom !== this.maxYClamp && bounds.left !== this.minXClamp && bounds.right !== this.maxXClamp) { // top\n                                bounds.left -= 1;\n                                bounds.right += 1;\n                                bounds.bottom += 2;\n                            } else if (bounds.top !== this.minYClamp && bounds.bottom === this.maxYClamp && bounds.left !== this.minXClamp && bounds.right !== this.maxXClamp) { // bottom\n                                bounds.top -= 2;\n                                bounds.left -= 1;\n                                bounds.right += 1;\n                            } else if (bounds.top === this.minYClamp && bounds.bottom !== this.maxYClamp && bounds.left === this.minXClamp && bounds.right !== this.maxXClamp) { // top left\n                                bounds.right += 2;\n                                bounds.bottom += 2;\n                            } else if (bounds.top === this.minYClamp && bounds.bottom !== this.maxYClamp && bounds.left !== this.minXClamp && bounds.right === this.maxXClamp) { // top right\n                                bounds.left -= 2;\n                                bounds.bottom += 2;\n                            } else if (bounds.top !== this.minYClamp && bounds.bottom === this.maxYClamp && bounds.left === this.minXClamp && bounds.right !== this.maxXClamp) { // bottom left\n                                bounds.top -= 2;\n                                bounds.right += 2;\n                            } else if (bounds.top !== this.minYClamp && bounds.bottom === this.maxYClamp && bounds.left !== this.minXClamp && bounds.right === this.maxXClamp) { // bottom right\n                                bounds.top -= 2;\n                                bounds.left -= 2;\n                            }\n                        }\n\n                        if (bounds.top < this.minYClamp) bounds.top = this.minYClamp;\n                        if (bounds.bottom > this.maxYClamp) bounds.bottom = this.maxYClamp;\n                        if (bounds.left < this.minXClamp) bounds.left = this.minXClamp;\n                        if (bounds.right > this.maxXClamp) bounds.right = this.maxXClamp;\n\n                        this.setBounds(bounds);\n                    }\n                    this.previousDistance = distance;\n                }\n            }\n            this.draw(this.ctx);\n        }\n    }\n\n    public onMouseMove(e:MouseEvent) {\n\n        if (this.crop.isImageSet() && this.isMouseDown) {\n            let mousePosition = ImageCropper.getMousePos(this.canvas, e);\n            this.move(new CropTouch(mousePosition.x, mousePosition.y, 0));\n            let dragTouch = this.getDragTouchForID(0);\n            if (dragTouch) {\n                dragTouch.x = mousePosition.x;\n                dragTouch.y = mousePosition.y;\n            } else {\n                dragTouch = new CropTouch(mousePosition.x, mousePosition.y, 0);\n            }\n            PointPool.instance.returnPoint(mousePosition);\n            this.drawCursors(dragTouch);\n            this.draw(this.ctx);\n        }\n    }\n\n    public move(cropTouch:CropTouch) {\n        if (this.isMouseDown) {\n            this.handleMove(cropTouch);\n        }\n    }\n\n    public getDragTouchForID(id:any):CropTouch | undefined {\n        for (let i = 0; i < this.currentDragTouches.length; i++) {\n            if (id === this.currentDragTouches[i].id) {\n                return this.currentDragTouches[i];\n            }\n        }\n        return undefined;\n    }\n\n    public drawCursors(cropTouch:CropTouch) {\n        let cursorDrawn = false;\n        if (cropTouch != null) {\n            if (cropTouch.dragHandle === this.center) {\n                ImageCropperDataShare.setStyle(this.canvas, 'move');\n                cursorDrawn = true;\n            }\n            if (cropTouch.dragHandle !== null && cropTouch.dragHandle instanceof CornerMarker) {\n\n                this.drawCornerCursor(cropTouch.dragHandle, cropTouch.dragHandle.position.x,\n                    cropTouch.dragHandle.position.y);\n                cursorDrawn = true;\n            }\n        }\n        let didDraw = false;\n        if (!cursorDrawn) {\n            for (let i = 0; i < this.markers.length; i++) {\n                didDraw = didDraw || this.drawCornerCursor(this.markers[i], cropTouch.x, cropTouch.y);\n            }\n            if (!didDraw) {\n                ImageCropperDataShare.setStyle(this.canvas, 'initial');\n            }\n        }\n        if (!didDraw && !cursorDrawn && this.center.touchInBounds(cropTouch.x, cropTouch.y)) {\n            this.center.setOver(true);\n            ImageCropperDataShare.setOver(this.canvas);\n            ImageCropperDataShare.setStyle(this.canvas, 'move');\n        } else {\n            this.center.setOver(false);\n        }\n    }\n\n    public drawCornerCursor(marker:any, x:number, y:number) {\n        if (marker.touchInBounds(x, y)) {\n            marker.setOver(true);\n            if (marker.getHorizontalNeighbour().position.x > marker.position.x) {\n                if (marker.getVerticalNeighbour().position.y > marker.position.y) {\n                    ImageCropperDataShare.setOver(this.canvas);\n                    ImageCropperDataShare.setStyle(this.canvas, 'nwse-resize');\n                } else {\n                    ImageCropperDataShare.setOver(this.canvas);\n                    ImageCropperDataShare.setStyle(this.canvas, 'nesw-resize');\n                }\n            } else {\n                if (marker.getVerticalNeighbour().position.y > marker.position.y) {\n                    ImageCropperDataShare.setOver(this.canvas);\n                    ImageCropperDataShare.setStyle(this.canvas, 'nesw-resize');\n                } else {\n                    ImageCropperDataShare.setOver(this.canvas);\n                    ImageCropperDataShare.setStyle(this.canvas, 'nwse-resize');\n                }\n            }\n            return true;\n        }\n        marker.setOver(false);\n        return false;\n    }\n\n    // todo: Unused param\n    public onTouchStart(event:TouchEvent) {\n        if (this.crop.isImageSet()) {\n            this.isMouseDown = true;\n        }\n    }\n\n    public onTouchEnd(event:TouchEvent) {\n        if (this.crop.isImageSet()) {\n            for (let i = 0; i < event.changedTouches.length; i++) {\n                let touch = event.changedTouches[i];\n                let dragTouch = this.getDragTouchForID(touch.identifier);\n                if (dragTouch && dragTouch !== undefined) {\n                    if (dragTouch.dragHandle instanceof CornerMarker || dragTouch.dragHandle instanceof DragMarker) {\n                        dragTouch.dragHandle.setOver(false);\n                    }\n                    this.handleRelease(dragTouch);\n                }\n            }\n\n            if (this.currentDragTouches.length === 0) {\n                this.isMouseDown = false;\n                this.currentlyInteracting = false;\n            }\n        }\n    }\n\n    // http://stackoverflow.com/questions/11929099/html5-canvas-drawimage-ratio-bug-ios\n    public drawImageIOSFix(ctx:CanvasRenderingContext2D, img:HTMLImageElement | HTMLCanvasElement | HTMLVideoElement,\n                           sx:number, sy:number, sw:number, sh:number, dx:number, dy:number, dw:number,\n                           dh:number) {\n\n        // Works only if whole image is displayed:\n        // ctx.drawImage(img, sx, sy, sw, sh, dx, dy, dw, dh / vertSquashRatio);\n        // The following works correct also when only a part of the image is displayed:\n        // ctx.drawImage(img, sx * this.vertSquashRatio, sy * this.vertSquashRatio, sw * this.vertSquashRatio, sh *\n        // this.vertSquashRatio, dx, dy, dw, dh);\n        ctx.drawImage(img, sx, sy, sw, sh, dx, dy, dw, dh);\n    }\n\n    public onMouseDown(event:MouseEvent) {\n        if (this.crop.isImageSet()) {\n            this.isMouseDown = true;\n        }\n    }\n\n    public onMouseUp(event:MouseEvent) {\n        if (this.crop.isImageSet()) {\n            ImageCropperDataShare.setReleased(this.canvas);\n            this.isMouseDown = false;\n            this.handleRelease(new CropTouch(0, 0, 0));\n        }\n    }\n}\n"]}