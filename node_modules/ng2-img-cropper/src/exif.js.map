{"version":3,"sources":["../../src/exif.ts"],"names":[],"mappings":";;;;;;;;;;AAAA;IAA8B,4BAAM;IAApC;;IAGA,CAAC;IAAD,eAAC;AAAD,CAHA,AAGC,CAH6B,MAAM,GAGnC;;AAQD,mEAAmE;AACnE;IAAA;IAMA,CAAC;IALiB,SAAG,GAAjB;QAAkB,cAAc;aAAd,UAAc,EAAd,qBAAc,EAAd,IAAc;YAAd,yBAAc;;QAC5B,EAAE,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC;YACb,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC;QACtB,CAAC;IACL,CAAC;IACL,YAAC;AAAD,CANA,AAMC,IAAA;;AAED;IAAA;IAuuBA,CAAC;IAjeiB,aAAQ,GAAtB,UAAuB,OAA0B,EAAE,KAAa,EAAE,OAAsB;QACpF,EAAE,CAAC,CAAC,OAAO,CAAC,gBAAgB,CAAC,CAAC,CAAC;YAC3B,OAAO,CAAC,gBAAgB,CAAC,KAAK,EAAE,OAAO,EAAE,KAAK,CAAC,CAAC;QACpD,CAAC;QAAC,IAAI,CAAC,CAAC;YACJ,aAAa;YACb,EAAE,CAAC,CAAC,OAAO,CAAC,WAAW,CAAC,CAAC,CAAC;gBACtB,OAAO,CAAC,WAAW,CAAC,IAAI,GAAG,KAAK,EAAE,OAAO,CAAC,CAAC;YAC/C,CAAC;QACL,CAAC;IACL,CAAC;IAEa,iBAAY,GAA1B,UAA2B,GAAmB;QAC1C,MAAM,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC;IAC5B,CAAC;IAEa,wBAAmB,GAAjC,UAAkC,MAAc;QAC5C,MAAM,GAAG,MAAM,CAAC,OAAO,CAAC,0BAA0B,EAAE,EAAE,CAAC,CAAC;QACxD,IAAI,MAAM,GAAW,IAAI,CAAC,MAAM,CAAC,CAAC;QAClC,IAAI,GAAG,GAAW,MAAM,CAAC,MAAM,CAAC;QAChC,IAAI,MAAM,GAAgB,IAAI,WAAW,CAAC,GAAG,CAAC,CAAC;QAC/C,IAAI,IAAI,GAAe,IAAI,UAAU,CAAC,MAAM,CAAC,CAAC;QAC9C,GAAG,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,GAAG,EAAE,CAAC,EAAE,EAAE,CAAC;YAC3B,IAAI,CAAC,CAAC,CAAC,GAAG,MAAM,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC;QACnC,CAAC;QACD,MAAM,CAAC,MAAM,CAAC;IAClB,CAAC;IAEa,oBAAe,GAA7B,UAA8B,GAAW,EAAE,QAAkB;QACzD,IAAI,IAAI,GAAmB,IAAI,cAAc,EAAE,CAAC;QAChD,IAAI,CAAC,IAAI,CAAC,KAAK,EAAE,GAAG,EAAE,IAAI,CAAC,CAAC;QAC5B,IAAI,CAAC,YAAY,GAAG,MAAM,CAAC;QAC3B,IAAI,CAAC,MAAM,GAAG;YACV,EAAE,CAAC,CAAC,IAAI,CAAC,MAAM,KAAK,GAAG,IAAI,IAAI,CAAC,MAAM,KAAK,CAAC,CAAC,CAAC,CAAC;gBAC3C,QAAQ,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;YAC5B,CAAC;QACL,CAAC,CAAC;QACF,IAAI,CAAC,IAAI,EAAE,CAAC;IAChB,CAAC;IAEa,iBAAY,GAA1B,UAA2B,GAAiC,EAAE,QAAkB;QAC5E,0BAA0B,OAAoB;YAC1C,IAAI,IAAI,GAAG,IAAI,CAAC,cAAc,CAAC,OAAO,CAAC,CAAC;YACxC,IAAI,QAAQ,GAAG,IAAI,CAAC,cAAc,CAAC,OAAO,CAAC,CAAC;YAC3C,GAAsB,CAAC,QAAQ,GAAG,IAAI,IAAI,EAAE,CAAC;YAC7C,GAAsB,CAAC,QAAQ,GAAG,QAAQ,IAAI,EAAE,CAAC;YAClD,EAAE,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC;gBACX,QAAQ,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;YACvB,CAAC;QACL,CAAC;QAED,EAAE,CAAC,CAAC,KAAK,IAAI,GAAG,IAAK,GAAsB,CAAC,GAAG,CAAC,CAAC,CAAC;YAC9C,EAAE,CAAC,CAAC,SAAS,CAAC,IAAI,CAAE,GAAsB,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;gBAC9C,IAAI,WAAW,GAAG,IAAI,CAAC,mBAAmB,CAAE,GAAsB,CAAC,GAAG,CAAC,CAAC;gBACxE,gBAAgB,CAAC,WAAW,CAAC,CAAC;YAClC,CAAC;YAAC,IAAI,CAAC,CAAC;gBACJ,EAAE,CAAC,CAAC,SAAS,CAAC,IAAI,CAAE,GAAsB,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;oBAC9C,IAAI,YAAU,GAAG,IAAI,UAAU,EAAE,CAAC;oBAClC,YAAU,CAAC,MAAM,GAAG,UAAC,CAAM;wBACvB,gBAAgB,CAAC,CAAC,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC;oBACtC,CAAC,CAAC;oBACF,IAAI,CAAC,eAAe,CAAE,GAAsB,CAAC,GAAG,EAAE,UAAC,IAAU;wBACzD,YAAU,CAAC,iBAAiB,CAAC,IAAI,CAAC,CAAC;oBACvC,CAAC,CAAC,CAAC;gBACP,CAAC;gBAAC,IAAI,CAAC,CAAC;oBACJ,IAAI,MAAI,GAAG,IAAI,cAAc,EAAE,CAAC;oBAChC,MAAI,CAAC,MAAM,GAAG;wBACV,EAAE,CAAC,CAAC,MAAI,CAAC,MAAM,KAAK,GAAG,IAAI,MAAI,CAAC,MAAM,KAAK,CAAC,CAAC,CAAC,CAAC;4BAC3C,gBAAgB,CAAC,MAAI,CAAC,QAAQ,CAAC,CAAC;wBACpC,CAAC;wBAAC,IAAI,CAAC,CAAC;4BACJ,MAAM,sBAAsB,CAAC;wBACjC,CAAC;oBACL,CAAC,CAAC;oBACF,MAAI,CAAC,IAAI,CAAC,KAAK,EAAG,GAAsB,CAAC,GAAG,EAAE,IAAI,CAAC,CAAC;oBACpD,MAAI,CAAC,YAAY,GAAG,aAAa,CAAC;oBAClC,MAAI,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;gBACpB,CAAC;YACL,CAAC;QACL,CAAC;QAAC,IAAI,CAAC,CAAC;YACJ,EAAE,CAAC,CAAC,UAAU,IAAI,CAAC,GAAG,YAAY,IAAI,IAAI,GAAG,YAAY,IAAI,CAAC,CAAC,CAAC,CAAC;gBAC7D,IAAI,UAAU,GAAG,IAAI,UAAU,EAAE,CAAC;gBAClC,UAAU,CAAC,MAAM,GAAG,UAAU,CAAM;oBAChC,KAAK,CAAC,GAAG,CAAC,qBAAqB,GAAG,CAAC,CAAC,MAAM,CAAC,MAAM,CAAC,UAAU,CAAC,CAAC;oBAC9D,gBAAgB,CAAC,CAAC,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC;gBACtC,CAAC,CAAC;gBAEF,UAAU,CAAC,iBAAiB,CAAC,GAAG,CAAC,CAAC;YACtC,CAAC;QACL,CAAC;IACL,CAAC;IAEa,mBAAc,GAA5B,UAA6B,IAAiB;QAC1C,IAAI,QAAQ,GAAG,IAAI,QAAQ,CAAC,IAAI,CAAC,CAAC;QAElC,KAAK,CAAC,GAAG,CAAC,qBAAqB,GAAG,IAAI,CAAC,UAAU,CAAC,CAAC;QACnD,EAAE,CAAC,CAAC,CAAC,QAAQ,CAAC,QAAQ,CAAC,CAAC,CAAC,KAAK,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,QAAQ,CAAC,CAAC,CAAC,KAAK,IAAI,CAAC,CAAC,CAAC,CAAC;YACrE,KAAK,CAAC,GAAG,CAAC,kBAAkB,CAAC,CAAC;YAC9B,MAAM,CAAC,KAAK,CAAC,CAAC,mBAAmB;QACrC,CAAC;QAED,IAAI,MAAM,GAAG,CAAC,CAAC;QACf,IAAI,MAAM,GAAW,IAAI,CAAC,UAAU,CAAC;QACrC,IAAI,MAAc,CAAC;QAEnB,OAAO,MAAM,GAAG,MAAM,EAAE,CAAC;YACrB,EAAE,CAAC,CAAC,QAAQ,CAAC,QAAQ,CAAC,MAAM,CAAC,KAAK,IAAI,CAAC,CAAC,CAAC;gBACrC,KAAK,CAAC,GAAG,CAAC,+BAA+B,GAAG,MAAM,GAAG,WAAW,GAAG,QAAQ,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC,CAAC;gBAC9F,MAAM,CAAC,KAAK,CAAC,CAAC,yCAAyC;YAC3D,CAAC;YAED,MAAM,GAAG,QAAQ,CAAC,QAAQ,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC;YACvC,KAAK,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC;YAElB,sDAAsD;YACtD,kDAAkD;YAClD,EAAE,CAAC,CAAC,MAAM,KAAK,GAAG,CAAC,CAAC,CAAC;gBACjB,KAAK,CAAC,GAAG,CAAC,qBAAqB,CAAC,CAAC;gBACjC,MAAM,CAAC,IAAI,CAAC,YAAY,CAAC,QAAQ,EAAE,MAAM,GAAG,CAAC,CAAC,CAAC,CAAC,yCAAyC;gBACzF,iDAAiD;YAErD,CAAC;YAAC,IAAI,CAAC,CAAC;gBACJ,MAAM,IAAI,CAAC,GAAG,QAAQ,CAAC,SAAS,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC;YACjD,CAAC;QACL,CAAC;IACL,CAAC;IAEa,mBAAc,GAA5B,UAA6B,IAAiB;QAC1C,IAAI,QAAQ,GAAG,IAAI,QAAQ,CAAC,IAAI,CAAC,CAAC;QAElC,KAAK,CAAC,GAAG,CAAC,qBAAqB,GAAG,IAAI,CAAC,UAAU,CAAC,CAAC;QACnD,EAAE,CAAC,CAAC,CAAC,QAAQ,CAAC,QAAQ,CAAC,CAAC,CAAC,KAAK,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,QAAQ,CAAC,CAAC,CAAC,KAAK,IAAI,CAAC,CAAC,CAAC,CAAC;YACrE,KAAK,CAAC,GAAG,CAAC,kBAAkB,CAAC,CAAC;YAC9B,MAAM,CAAC,KAAK,CAAC,CAAC,mBAAmB;QACrC,CAAC;QAED,IAAI,MAAM,GAAG,CAAC,CAAC;QACf,IAAI,MAAM,GAAG,IAAI,CAAC,UAAU,CAAC;QAE7B,IAAI,mBAAmB,GAAG,UAAU,SAAmB,EAAE,OAAe;YACpE,MAAM,CAAC,CACH,SAAS,CAAC,QAAQ,CAAC,OAAO,CAAC,KAAK,IAAI,IAAI,SAAS,CAAC,QAAQ,CAAC,OAAO,GAAG,CAAC,CAAC,KAAK,IAAI,IAAI,SAAS,CAAC,QAAQ,CAClG,OAAO,GAAG,CAAC,CAAC,KAAK,IAAI,IAAI,SAAS,CAAC,QAAQ,CAAC,OAAO,GAAG,CAAC,CAAC,KAAK,IAAI,IAAI,SAAS,CAAC,QAAQ,CACvF,OAAO,GAAG,CAAC,CAAC,KAAK,IAAI,IAAI,SAAS,CAAC,QAAQ,CAAC,OAAO,GAAG,CAAC,CAAC,KAAK,IAAI,CACxE,CAAC;QACN,CAAC,CAAC;QAEF,OAAO,MAAM,GAAG,MAAM,EAAE,CAAC;YAErB,EAAE,CAAC,CAAC,mBAAmB,CAAC,QAAQ,EAAE,MAAM,CAAC,CAAC,CAAC,CAAC;gBAExC,iFAAiF;gBACjF,IAAI,gBAAgB,GAAG,QAAQ,CAAC,QAAQ,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC;gBACrD,EAAE,CAAC,CAAC,gBAAgB,GAAG,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;oBAC7B,gBAAgB,IAAI,CAAC,CAAC;gBAC1B,CAAC;gBACD,mCAAmC;gBACnC,EAAE,CAAC,CAAC,gBAAgB,KAAK,CAAC,CAAC,CAAC,CAAC;oBACzB,WAAW;oBACX,gBAAgB,GAAG,CAAC,CAAC;gBACzB,CAAC;gBAED,IAAI,WAAW,GAAG,MAAM,GAAG,CAAC,GAAG,gBAAgB,CAAC;gBAChD,IAAI,aAAa,GAAG,QAAQ,CAAC,SAAS,CAAC,MAAM,GAAG,CAAC,GAAG,gBAAgB,CAAC,CAAC;gBAEtE,MAAM,CAAC,IAAI,CAAC,YAAY,CAAC,IAAI,EAAE,WAAW,EAAE,aAAa,CAAC,CAAC;YAC/D,CAAC;YAED,qCAAqC;YACrC,MAAM,EAAE,CAAC;QAEb,CAAC;IAEL,CAAC;IAEa,iBAAY,GAA1B,UAA2B,IAAiB,EAAE,WAAmB,EAAE,aAAqB;QACpF,IAAI,QAAQ,GAAG,IAAI,QAAQ,CAAC,IAAI,CAAC,CAAC;QAClC,IAAI,IAAI,GAAQ,EAAE,CAAC;QACnB,IAAI,UAAe,EAAE,SAAiB,EAAE,QAAgB,EAAE,WAAgB,EAAE,WAAmB,CAAC;QAChG,IAAI,eAAe,GAAG,WAAW,CAAC;QAClC,OAAO,eAAe,GAAG,WAAW,GAAG,aAAa,EAAE,CAAC;YACnD,EAAE,CAAC,CAAC,QAAQ,CAAC,QAAQ,CAAC,eAAe,CAAC,KAAK,IAAI,IAAI,QAAQ,CAAC,QAAQ,CAAC,eAAe,GAAG,CAAC,CAAC,KAAK,IAAI,CAAC,CAAC,CAAC;gBACjG,WAAW,GAAG,QAAQ,CAAC,QAAQ,CAAC,eAAe,GAAG,CAAC,CAAC,CAAC;gBACrD,EAAE,CAAC,CAAC,WAAW,IAAI,IAAI,CAAC,YAAY,CAAC,CAAC,CAAC;oBACnC,QAAQ,GAAG,QAAQ,CAAC,QAAQ,CAAC,eAAe,GAAG,CAAC,CAAC,CAAC;oBAClD,WAAW,GAAG,QAAQ,GAAG,CAAC,CAAC;oBAC3B,SAAS,GAAG,IAAI,CAAC,YAAY,CAAC,WAAW,CAAC,CAAC;oBAC3C,UAAU,GAAG,IAAI,CAAC,eAAe,CAAC,QAAQ,EAAE,eAAe,GAAG,CAAC,EAAE,QAAQ,CAAC,CAAC;oBAC3E,oDAAoD;oBACpD,EAAE,CAAC,CAAC,IAAI,CAAC,cAAc,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC;wBACjC,+DAA+D;wBAC/D,EAAE,CAAC,CAAC,IAAI,CAAC,SAAS,CAAC,YAAY,KAAK,CAAC,CAAC,CAAC;4BACnC,IAAI,CAAC,SAAS,CAAC,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;wBACrC,CAAC;wBAAC,IAAI,CAAC,CAAC;4BACJ,IAAI,CAAC,SAAS,CAAC,GAAG,CAAC,IAAI,CAAC,SAAS,CAAC,EAAE,UAAU,CAAC,CAAC;wBACpD,CAAC;oBACL,CAAC;oBAAC,IAAI,CAAC,CAAC;wBACJ,IAAI,CAAC,SAAS,CAAC,GAAG,UAAU,CAAC;oBACjC,CAAC;gBACL,CAAC;YACL,CAAC;YACD,eAAe,EAAE,CAAC;QACtB,CAAC;QACD,MAAM,CAAC,IAAI,CAAC;IAChB,CAAC;IAEa,aAAQ,GAAtB,UAAuB,IAAc,EAAE,SAAiB,EAAE,QAAgB,EAAE,OAAiB,EACtE,MAAe;QAClC,IAAI,OAAO,GAAW,IAAI,CAAC,SAAS,CAAC,QAAQ,EAAE,CAAC,MAAM,CAAC,CAAC;QACxD,IAAI,IAAI,GAAQ,EAAE,CAAC;QACnB,IAAI,WAAmB,CAAC;QACxB,IAAI,GAAW,CAAC;QAEhB,GAAG,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,OAAO,EAAE,CAAC,EAAE,EAAE,CAAC;YAC/B,WAAW,GAAG,QAAQ,GAAG,CAAC,GAAG,EAAE,GAAG,CAAC,CAAC;YACpC,GAAG,GAAG,OAAO,CAAC,IAAI,CAAC,SAAS,CAAC,WAAW,EAAE,CAAC,MAAM,CAAC,CAAC,CAAC;YACpD,EAAE,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC;gBACP,KAAK,CAAC,GAAG,CAAC,eAAe,GAAG,IAAI,CAAC,SAAS,CAAC,WAAW,EAAE,CAAC,MAAM,CAAC,CAAC,CAAC;YACtE,CAAC;YACD,IAAI,CAAC,GAAG,CAAC,GAAG,IAAI,CAAC,YAAY,CAAC,IAAI,EAAE,WAAW,EAAE,SAAS,EAAE,QAAQ,EAAE,MAAM,CAAC,CAAC;QAClF,CAAC;QACD,MAAM,CAAC,IAAI,CAAC;IAChB,CAAC;IAEa,iBAAY,GAA1B,UAA2B,IAAS,EAAE,WAAmB,EAAE,SAAiB,EAAE,QAAgB,EACnE,MAAe;QACtC,IAAI,IAAI,GAAW,IAAI,CAAC,SAAS,CAAC,WAAW,GAAG,CAAC,EAAE,CAAC,MAAM,CAAC,CAAC;QAC5D,IAAI,SAAS,GAAG,IAAI,CAAC,SAAS,CAAC,WAAW,GAAG,CAAC,EAAE,CAAC,MAAM,CAAC,CAAC;QACzD,IAAI,WAAW,GAAG,IAAI,CAAC,SAAS,CAAC,WAAW,GAAG,CAAC,EAAE,CAAC,MAAM,CAAC,GAAG,SAAS,CAAC;QACvE,IAAI,MAAc,CAAC;QACnB,IAAI,IAAW,EAAE,GAAQ,EAAE,CAAS,CAAC;QACrC,IAAI,SAAc,CAAC;QACnB,IAAI,WAAgB,CAAC;QAErB,MAAM,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC;YACX,KAAK,CAAC,CAAC,CAAC,2BAA2B;YACnC,KAAK,CAAC,CAAE,kDAAkD;gBACtD,EAAE,CAAC,CAAC,SAAS,KAAK,CAAC,CAAC,CAAC,CAAC;oBAClB,MAAM,CAAC,IAAI,CAAC,QAAQ,CAAC,WAAW,GAAG,CAAC,EAAE,CAAC,MAAM,CAAC,CAAC;gBACnD,CAAC;gBAAC,IAAI,CAAC,CAAC;oBACJ,MAAM,GAAG,SAAS,GAAG,CAAC,GAAG,WAAW,GAAG,CAAC,WAAW,GAAG,CAAC,CAAC,CAAC;oBACzD,IAAI,GAAG,EAAE,CAAC;oBACV,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,SAAS,EAAE,CAAC,EAAE,EAAE,CAAC;wBAC7B,IAAI,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC,QAAQ,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC;oBACxC,CAAC;oBACD,MAAM,CAAC,IAAI,CAAC;gBAChB,CAAC;YAEL,KAAK,CAAC,CAAE,oBAAoB;gBACxB,MAAM,GAAG,SAAS,GAAG,CAAC,GAAG,WAAW,GAAG,CAAC,WAAW,GAAG,CAAC,CAAC,CAAC;gBACzD,MAAM,CAAC,IAAI,CAAC,eAAe,CAAC,IAAI,EAAE,MAAM,EAAE,SAAS,GAAG,CAAC,CAAC,CAAC;YAE7D,KAAK,CAAC,CAAE,oBAAoB;gBACxB,EAAE,CAAC,CAAC,SAAS,KAAK,CAAC,CAAC,CAAC,CAAC;oBAClB,MAAM,CAAC,IAAI,CAAC,SAAS,CAAC,WAAW,GAAG,CAAC,EAAE,CAAC,MAAM,CAAC,CAAC;gBACpD,CAAC;gBAAC,IAAI,CAAC,CAAC;oBACJ,MAAM,GAAG,SAAS,GAAG,CAAC,GAAG,WAAW,GAAG,CAAC,WAAW,GAAG,CAAC,CAAC,CAAC;oBACzD,IAAI,GAAG,EAAE,CAAC;oBACV,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,SAAS,EAAE,CAAC,EAAE,EAAE,CAAC;wBAC7B,IAAI,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC,SAAS,CAAC,MAAM,GAAG,CAAC,GAAG,CAAC,EAAE,CAAC,MAAM,CAAC,CAAC;oBACtD,CAAC;oBACD,MAAM,CAAC,IAAI,CAAC;gBAChB,CAAC;YAEL,KAAK,CAAC,CAAE,mBAAmB;gBACvB,EAAE,CAAC,CAAC,SAAS,KAAK,CAAC,CAAC,CAAC,CAAC;oBAClB,MAAM,CAAC,IAAI,CAAC,SAAS,CAAC,WAAW,GAAG,CAAC,EAAE,CAAC,MAAM,CAAC,CAAC;gBACpD,CAAC;gBAAC,IAAI,CAAC,CAAC;oBACJ,IAAI,GAAG,EAAE,CAAC;oBACV,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,SAAS,EAAE,CAAC,EAAE,EAAE,CAAC;wBAC7B,IAAI,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC,SAAS,CAAC,WAAW,GAAG,CAAC,GAAG,CAAC,EAAE,CAAC,MAAM,CAAC,CAAC;oBAC3D,CAAC;oBACD,MAAM,CAAC,IAAI,CAAC;gBAChB,CAAC;YAEL,KAAK,CAAC,CAAK,wEAAwE;gBAC/E,EAAE,CAAC,CAAC,SAAS,KAAK,CAAC,CAAC,CAAC,CAAC;oBAClB,SAAS,GAAG,IAAI,CAAC,SAAS,CAAC,WAAW,EAAE,CAAC,MAAM,CAAC,CAAC;oBACjD,WAAW,GAAG,IAAI,CAAC,SAAS,CAAC,WAAW,GAAG,CAAC,EAAE,CAAC,MAAM,CAAC,CAAC;oBACvD,GAAG,GAAG,IAAI,QAAQ,CAAC,SAAS,GAAG,WAAW,CAAC,CAAC;oBAC5C,GAAG,CAAC,SAAS,GAAG,SAAS,CAAC;oBAC1B,GAAG,CAAC,WAAW,GAAG,WAAW,CAAC;oBAC9B,MAAM,CAAC,GAAG,CAAC;gBACf,CAAC;gBAAC,IAAI,CAAC,CAAC;oBACJ,IAAI,GAAG,EAAE,CAAC;oBACV,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,SAAS,EAAE,CAAC,EAAE,EAAE,CAAC;wBAC7B,SAAS,GAAG,IAAI,CAAC,SAAS,CAAC,WAAW,GAAG,CAAC,GAAG,CAAC,EAAE,CAAC,MAAM,CAAC,CAAC;wBACzD,WAAW,GAAG,IAAI,CAAC,SAAS,CAAC,WAAW,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,EAAE,CAAC,MAAM,CAAC,CAAC;wBAC/D,IAAI,CAAC,CAAC,CAAC,GAAG,IAAI,QAAQ,CAAC,SAAS,GAAG,WAAW,CAAC,CAAC;wBAChD,IAAI,CAAC,CAAC,CAAC,CAAC,SAAS,GAAG,SAAS,CAAC;wBAC9B,IAAI,CAAC,CAAC,CAAC,CAAC,WAAW,GAAG,WAAW,CAAC;oBACtC,CAAC;oBACD,MAAM,CAAC,IAAI,CAAC;gBAChB,CAAC;YAEL,KAAK,CAAC,CAAE,2BAA2B;gBAC/B,EAAE,CAAC,CAAC,SAAS,KAAK,CAAC,CAAC,CAAC,CAAC;oBAClB,MAAM,CAAC,IAAI,CAAC,QAAQ,CAAC,WAAW,GAAG,CAAC,EAAE,CAAC,MAAM,CAAC,CAAC;gBACnD,CAAC;gBAAC,IAAI,CAAC,CAAC;oBACJ,IAAI,GAAG,EAAE,CAAC;oBACV,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,SAAS,EAAE,CAAC,EAAE,EAAE,CAAC;wBAC7B,IAAI,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC,QAAQ,CAAC,WAAW,GAAG,CAAC,GAAG,CAAC,EAAE,CAAC,MAAM,CAAC,CAAC;oBAC1D,CAAC;oBACD,MAAM,CAAC,IAAI,CAAC;gBAChB,CAAC;YAEL,KAAK,EAAE,CAAE,yEAAyE;gBAC9E,EAAE,CAAC,CAAC,SAAS,KAAK,CAAC,CAAC,CAAC,CAAC;oBAClB,MAAM,CAAC,IAAI,CAAC,QAAQ,CAAC,WAAW,EAAE,CAAC,MAAM,CAAC,GAAG,IAAI,CAAC,QAAQ,CAAC,WAAW,GAAG,CAAC,EAAE,CAAC,MAAM,CAAC,CAAC;gBACzF,CAAC;gBAAC,IAAI,CAAC,CAAC;oBACJ,IAAI,GAAG,EAAE,CAAC;oBACV,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,SAAS,EAAE,CAAC,EAAE,EAAE,CAAC;wBAC7B,IAAI,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC,QAAQ,CAAC,WAAW,GAAG,CAAC,GAAG,CAAC,EAAE,CAAC,MAAM,CAAC,GAAG,IAAI,CAAC,QAAQ,CAAC,WAAW,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,EACrF,CAAC,MAAM,CAAC,CAAC;oBACrB,CAAC;oBACD,MAAM,CAAC,IAAI,CAAC;gBAChB,CAAC;YACL;gBACI,KAAK,CAAC;QACd,CAAC;IACL,CAAC;IAEa,oBAAe,GAA7B,UAA8B,MAAgB,EAAE,KAAa,EAAE,MAAc;QACzE,IAAI,MAAM,GAAG,EAAE,CAAC;QAChB,GAAG,CAAC,CAAC,IAAI,CAAC,GAAG,KAAK,EAAE,CAAC,GAAG,KAAK,GAAG,MAAM,EAAE,CAAC,EAAE,EAAE,CAAC;YAC1C,MAAM,IAAI,MAAM,CAAC,YAAY,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAC;QACtD,CAAC;QACD,MAAM,CAAC,MAAM,CAAC;IAClB,CAAC;IAEa,iBAAY,GAA1B,UAA2B,IAAc,EAAE,KAAa;QACpD,EAAE,CAAC,CAAC,IAAI,CAAC,eAAe,CAAC,IAAI,EAAE,KAAK,EAAE,CAAC,CAAC,KAAK,MAAM,CAAC,CAAC,CAAC;YAClD,KAAK,CAAC,GAAG,CAAC,uBAAuB,GAAG,IAAI,CAAC,eAAe,CAAC,IAAI,EAAE,KAAK,EAAE,CAAC,CAAC,CAAC,CAAC;YAE1E,MAAM,CAAC,KAAK,CAAC;QACjB,CAAC;QAED,IAAI,MAAe,EAAE,IAAS,EAAE,GAAW,EAAE,QAAa,EAAE,OAAY,EAAE,UAAU,GAAW,KAAK,GAAG,CAAC,CAAC;QAEzG,wCAAwC;QACxC,EAAE,CAAC,CAAC,IAAI,CAAC,SAAS,CAAC,UAAU,CAAC,KAAK,MAAM,CAAC,CAAC,CAAC;YACxC,MAAM,GAAG,KAAK,CAAC;QACnB,CAAC;QAAC,IAAI,CAAC,CAAC;YACJ,EAAE,CAAC,CAAC,IAAI,CAAC,SAAS,CAAC,UAAU,CAAC,KAAK,MAAM,CAAC,CAAC,CAAC;gBACxC,MAAM,GAAG,IAAI,CAAC;YAClB,CAAC;YAAC,IAAI,CAAC,CAAC;gBACJ,KAAK,CAAC,GAAG,CAAC,4CAA4C,CAAC,CAAC;gBACxD,MAAM,CAAC,KAAK,CAAC;YACjB,CAAC;QACL,CAAC;QAED,EAAE,CAAC,CAAC,IAAI,CAAC,SAAS,CAAC,UAAU,GAAG,CAAC,EAAE,CAAC,MAAM,CAAC,KAAK,MAAM,CAAC,CAAC,CAAC;YACrD,KAAK,CAAC,GAAG,CAAC,kCAAkC,CAAC,CAAC;YAC9C,MAAM,CAAC,KAAK,CAAC;QACjB,CAAC;QAED,IAAI,cAAc,GAAG,IAAI,CAAC,SAAS,CAAC,UAAU,GAAG,CAAC,EAAE,CAAC,MAAM,CAAC,CAAC;QAE7D,EAAE,CAAC,CAAC,cAAc,GAAG,UAAU,CAAC,CAAC,CAAC;YAC9B,KAAK,CAAC,GAAG,CAAC,iDAAiD,EAAE,IAAI,CAAC,SAAS,CAAC,UAAU,GAAG,CAAC,EAAE,CAAC,MAAM,CAAC,CAAC,CAAC;YACtG,MAAM,CAAC,KAAK,CAAC;QACjB,CAAC;QAED,IAAI,GAAG,IAAI,CAAC,QAAQ,CAAC,IAAI,EAAE,UAAU,EAAE,UAAU,GAAG,cAAc,EAAE,IAAI,CAAC,QAAQ,EAAE,MAAM,CAAC,CAAC;QAE3F,EAAE,CAAC,CAAC,IAAI,CAAC,cAAc,CAAC,CAAC,CAAC;YACtB,QAAQ,GAAG,IAAI,CAAC,QAAQ,CAAC,IAAI,EAAE,UAAU,EAAE,UAAU,GAAG,IAAI,CAAC,cAAc,EAAE,IAAI,CAAC,IAAI,EAAE,MAAM,CAAC,CAAC;YAChG,GAAG,CAAC,CAAC,GAAG,IAAI,QAAQ,CAAC,CAAC,CAAC;gBACnB,EAAE,CAAC,CAAC,EAAE,CAAC,cAAc,CAAC,IAAI,CAAC,QAAQ,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC;oBACxC,MAAM,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC;wBACV,KAAK,aAAa,CAAE;wBACpB,KAAK,OAAO,CAAE;wBACd,KAAK,cAAc,CAAE;wBACrB,KAAK,iBAAiB,CAAE;wBACxB,KAAK,eAAe,CAAE;wBACtB,KAAK,kBAAkB,CAAE;wBACzB,KAAK,WAAW,CAAE;wBAClB,KAAK,gBAAgB,CAAE;wBACvB,KAAK,cAAc,CAAE;wBACrB,KAAK,aAAa,CAAE;wBACpB,KAAK,UAAU,CAAE;wBACjB,KAAK,YAAY,CAAE;wBACnB,KAAK,WAAW,CAAE;wBAClB,KAAK,sBAAsB,CAAE;wBAC7B,KAAK,YAAY;4BACb,QAAQ,CAAC,GAAG,CAAC,GAAG,IAAI,CAAC,YAAY,CAAC,GAAG,CAAC,CAAC,QAAQ,CAAC,GAAG,CAAC,CAAC,CAAC;4BACtD,KAAK,CAAC;wBACV,KAAK,aAAa,CAAE;wBACpB,KAAK,iBAAiB;4BAClB,QAAQ,CAAC,GAAG,CAAC,GAAG,MAAM,CAAC,YAAY,CAAC,QAAQ,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,EAAE,QAAQ,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,EAAE,QAAQ,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,EACpF,QAAQ,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;4BACtB,KAAK,CAAC;wBACV,KAAK,yBAAyB;4BAC1B,IAAI,UAAU,GAAG,YAAY,CAAC;4BAC9B,QAAQ,CAAC,GAAG,CAAC,GAAG,IAAI,CAAC,YAAY,CAAC,UAAU,CAAC,CAAC,QAAQ,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC,YAAY,CAAC,UAAU,CAAC,CAAC,QAAQ,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC,YAAY,CAAC,UAAU,CAAC,CAAC,QAAQ,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC,YAAY,CAAC,UAAU,CAAC,CAAC,QAAQ,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;4BACtN,KAAK,CAAC;wBACV;4BACI,KAAK,CAAC;oBACd,CAAC;oBACD,IAAI,CAAC,GAAG,CAAC,GAAG,QAAQ,CAAC,GAAG,CAAC,CAAC;gBAC9B,CAAC;YACL,CAAC;QACL,CAAC;QAED,EAAE,CAAC,CAAC,IAAI,CAAC,iBAAiB,CAAC,CAAC,CAAC;YACzB,OAAO,GAAG,IAAI,CAAC,QAAQ,CAAC,IAAI,EAAE,UAAU,EAAE,UAAU,GAAG,IAAI,CAAC,iBAAiB,EAAE,IAAI,CAAC,OAAO,EAAE,MAAM,CAAC,CAAC;YACrG,GAAG,CAAC,CAAC,GAAG,IAAI,OAAO,CAAC,CAAC,CAAC;gBAClB,EAAE,CAAC,CAAC,EAAE,CAAC,cAAc,CAAC,IAAI,CAAC,OAAO,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC;oBACvC,MAAM,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC;wBACV,KAAK,cAAc;4BACf,OAAO,CAAC,GAAG,CAAC,GAAG,OAAO,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,GAAG,GAAG,OAAO,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,GAAG,GAAG,OAAO,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,GAAG,GAAG,OAAO,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;4BACvG,KAAK,CAAC;wBACV;4BACI,KAAK,CAAC;oBACd,CAAC;oBACD,IAAI,CAAC,GAAG,CAAC,GAAG,OAAO,CAAC,GAAG,CAAC,CAAC;gBAC7B,CAAC;YACL,CAAC;QACL,CAAC;QAED,MAAM,CAAC,IAAI,CAAC;IAChB,CAAC;IAEa,YAAO,GAArB,UAAsB,GAAsC,EAAE,QAAkB;QAE5E,EAAE,CAAC,CAAC,CAAC,GAAG,YAAY,KAAK,IAAI,GAAG,YAAY,gBAAgB,CAAC,IAAI,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC,CAAC;YAC7E,MAAM,CAAC,KAAK,CAAC;QACjB,CAAC;QAED,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,YAAY,CAAE,GAAsB,CAAC,CAAC,CAAC,CAAC;YAC9C,IAAI,CAAC,YAAY,CAAE,GAAsB,EAAE,QAAQ,CAAC,CAAC;QACzD,CAAC;QAAC,IAAI,CAAC,CAAC;YACJ,EAAE,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC;gBACX,QAAQ,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;YACvB,CAAC;QACL,CAAC;QACD,MAAM,CAAC,IAAI,CAAC;IAChB,CAAC;IAEa,WAAM,GAApB,UAAqB,GAAQ,EAAE,GAAW;QACtC,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,YAAY,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;YAC1B,MAAM,CAAC;QACX,CAAC;QACD,MAAM,CAAC,GAAG,CAAC,QAAQ,CAAC,GAAG,CAAC,CAAC;IAC7B,CAAC;IAAA,CAAC;IAEY,eAAU,GAAxB,UAAyB,GAAQ;QAC7B,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,YAAY,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;YAC1B,MAAM,CAAC,EAAE,CAAC;QACd,CAAC;QACD,IAAI,CAAS,EAAE,IAAI,GAAQ,GAAG,CAAC,QAAQ,EAAE,IAAI,GAAQ,EAAE,CAAC;QACxD,GAAG,CAAC,CAAC,CAAC,IAAI,IAAI,CAAC,CAAC,CAAC;YACb,EAAE,CAAC,CAAC,IAAI,CAAC,cAAc,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;gBACzB,IAAI,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC,CAAC,CAAC,CAAC;YACtB,CAAC;QACL,CAAC;QACD,MAAM,CAAC,IAAI,CAAC;IAChB,CAAC;IAAA,CAAC;IAEY,WAAM,GAApB,UAAqB,GAAmB;QACpC,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,YAAY,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;YAC1B,MAAM,CAAC,EAAE,CAAC;QACd,CAAC;QACD,IAAI,CAAM,EAAE,IAAI,GAAQ,GAAG,CAAC,QAAQ,EAAE,SAAS,GAAG,EAAE,CAAC;QACrD,GAAG,CAAC,CAAC,CAAC,IAAI,IAAI,CAAC,CAAC,CAAC;YACb,EAAE,CAAC,CAAC,IAAI,CAAC,cAAc,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;gBACzB,EAAE,CAAC,CAAC,OAAO,IAAI,CAAC,CAAC,CAAC,KAAK,QAAQ,CAAC,CAAC,CAAC;oBAC9B,EAAE,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,YAAY,MAAM,CAAC,CAAC,CAAC;wBAC5B,SAAS,IAAO,CAAC,WAAM,IAAI,CAAC,CAAC,CAAC,UAAK,IAAI,CAAC,CAAC,CAAC,CAAC,SAAS,SAAI,IAAI,CAAC,CAAC,CAAC,CAAC,WAAW,UAAO,CAAC;oBACvF,CAAC;oBAAC,IAAI,CAAC,CAAC;wBACJ,SAAS,IAAO,CAAC,YAAO,IAAI,CAAC,CAAC,CAAC,CAAC,MAAM,iBAAc,CAAC;oBACzD,CAAC;gBACL,CAAC;gBAAC,IAAI,CAAC,CAAC;oBACJ,SAAS,IAAO,CAAC,WAAM,IAAI,CAAC,CAAC,CAAC,SAAM,CAAC;gBACzC,CAAC;YACL,CAAC;QACL,CAAC;QACD,MAAM,CAAC,SAAS,CAAC;IACrB,CAAC;IAEa,uBAAkB,GAAhC,UAAiC,IAAiB;QAC9C,MAAM,CAAC,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,CAAC;IACrC,CAAC;IApuBa,UAAK,GAAY,KAAK,CAAC;IAEvB,iBAAY,GAAQ;QAC9B,IAAI,EAAE,SAAS;QACf,IAAI,EAAE,QAAQ;QACd,IAAI,EAAE,UAAU;QAChB,IAAI,EAAE,aAAa;QACnB,IAAI,EAAE,QAAQ;QACd,IAAI,EAAE,aAAa;QACnB,IAAI,EAAE,eAAe;QACrB,IAAI,EAAE,UAAU;QAChB,IAAI,EAAE,WAAW;QACjB,IAAI,EAAE,UAAU;KACnB,CAAC;IAEY,SAAI,GAAQ;QAEtB,eAAe;QACf,MAAM,EAAE,aAAa;QACrB,MAAM,EAAE,iBAAiB;QAEzB,kBAAkB;QAClB,MAAM,EAAE,YAAY;QAEpB,sBAAsB;QACtB,MAAM,EAAE,iBAAiB;QACzB,MAAM,EAAE,iBAAiB;QACzB,MAAM,EAAE,yBAAyB;QACjC,MAAM,EAAE,wBAAwB;QAEhC,mBAAmB;QACnB,MAAM,EAAE,WAAW;QACnB,MAAM,EAAE,aAAa;QAErB,eAAe;QACf,MAAM,EAAE,kBAAkB;QAE1B,gBAAgB;QAChB,MAAM,EAAE,kBAAkB;QAC1B,MAAM,EAAE,mBAAmB;QAC3B,MAAM,EAAE,YAAY;QACpB,MAAM,EAAE,oBAAoB;QAC5B,MAAM,EAAE,qBAAqB;QAE7B,4BAA4B;QAC5B,MAAM,EAAE,cAAc;QACtB,MAAM,EAAE,SAAS;QACjB,MAAM,EAAE,iBAAiB;QACzB,MAAM,EAAE,qBAAqB;QAC7B,MAAM,EAAE,iBAAiB;QACzB,MAAM,EAAE,MAAM;QACd,MAAM,EAAE,mBAAmB;QAC3B,MAAM,EAAE,eAAe;QACvB,MAAM,EAAE,iBAAiB;QACzB,MAAM,EAAE,cAAc;QACtB,MAAM,EAAE,kBAAkB;QAC1B,MAAM,EAAE,iBAAiB;QACzB,MAAM,EAAE,cAAc;QACtB,MAAM,EAAE,aAAa;QACrB,MAAM,EAAE,OAAO;QACf,MAAM,EAAE,aAAa;QACrB,MAAM,EAAE,aAAa;QACrB,MAAM,EAAE,aAAa;QACrB,MAAM,EAAE,0BAA0B;QAClC,MAAM,EAAE,uBAAuB;QAC/B,MAAM,EAAE,uBAAuB;QAC/B,MAAM,EAAE,0BAA0B;QAClC,MAAM,EAAE,iBAAiB;QACzB,MAAM,EAAE,eAAe;QACvB,MAAM,EAAE,eAAe;QACvB,MAAM,EAAE,YAAY;QACpB,MAAM,EAAE,WAAW;QACnB,MAAM,EAAE,YAAY;QACpB,MAAM,EAAE,gBAAgB;QACxB,MAAM,EAAE,cAAc;QACtB,MAAM,EAAE,cAAc;QACtB,MAAM,EAAE,mBAAmB;QAC3B,MAAM,EAAE,uBAAuB;QAC/B,MAAM,EAAE,kBAAkB;QAC1B,MAAM,EAAE,aAAa;QACrB,MAAM,EAAE,UAAU;QAClB,MAAM,EAAE,YAAY;QACpB,MAAM,EAAE,WAAW;QACnB,MAAM,EAAE,0BAA0B;QAClC,MAAM,EAAE,sBAAsB;QAE9B,aAAa;QACb,MAAM,EAAE,4BAA4B,EAAE,MAAM,EAAE,eAAe,CAAE,6CAA6C;KAC/G,CAAC;IAEY,aAAQ,GAAQ;QAC1B,MAAM,EAAE,YAAY;QACpB,MAAM,EAAE,aAAa;QACrB,MAAM,EAAE,gBAAgB;QACxB,MAAM,EAAE,mBAAmB;QAC3B,MAAM,EAAE,4BAA4B;QACpC,MAAM,EAAE,eAAe;QACvB,MAAM,EAAE,aAAa;QACrB,MAAM,EAAE,2BAA2B;QACnC,MAAM,EAAE,aAAa;QACrB,MAAM,EAAE,iBAAiB;QACzB,MAAM,EAAE,qBAAqB;QAC7B,MAAM,EAAE,kBAAkB;QAC1B,MAAM,EAAE,kBAAkB;QAC1B,MAAM,EAAE,aAAa;QACrB,MAAM,EAAE,aAAa;QACrB,MAAM,EAAE,gBAAgB;QACxB,MAAM,EAAE,cAAc;QACtB,MAAM,EAAE,cAAc;QACtB,MAAM,EAAE,iBAAiB;QACzB,MAAM,EAAE,uBAAuB;QAC/B,MAAM,EAAE,6BAA6B;QACrC,MAAM,EAAE,kBAAkB;QAC1B,MAAM,EAAE,YAAY;QACpB,MAAM,EAAE,uBAAuB;QAC/B,MAAM,EAAE,mBAAmB;QAC3B,MAAM,EAAE,qBAAqB;QAC7B,MAAM,EAAE,UAAU;QAClB,MAAM,EAAE,kBAAkB;QAC1B,MAAM,EAAE,MAAM;QACd,MAAM,EAAE,OAAO;QACf,MAAM,EAAE,UAAU;QAClB,MAAM,EAAE,QAAQ;QAChB,MAAM,EAAE,WAAW;KACtB,CAAC;IAEY,YAAO,GAAQ;QACzB,MAAM,EAAE,cAAc;QACtB,MAAM,EAAE,gBAAgB;QACxB,MAAM,EAAE,aAAa;QACrB,MAAM,EAAE,iBAAiB;QACzB,MAAM,EAAE,cAAc;QACtB,MAAM,EAAE,gBAAgB;QACxB,MAAM,EAAE,aAAa;QACrB,MAAM,EAAE,cAAc;QACtB,MAAM,EAAE,eAAe;QACvB,MAAM,EAAE,WAAW;QACnB,MAAM,EAAE,gBAAgB;QACxB,MAAM,EAAE,QAAQ;QAChB,MAAM,EAAE,aAAa;QACrB,MAAM,EAAE,UAAU;QAClB,MAAM,EAAE,aAAa;QACrB,MAAM,EAAE,UAAU;QAClB,MAAM,EAAE,oBAAoB;QAC5B,MAAM,EAAE,iBAAiB;QACzB,MAAM,EAAE,aAAa;QACrB,MAAM,EAAE,oBAAoB;QAC5B,MAAM,EAAE,iBAAiB;QACzB,MAAM,EAAE,qBAAqB;QAC7B,MAAM,EAAE,kBAAkB;QAC1B,MAAM,EAAE,mBAAmB;QAC3B,MAAM,EAAE,gBAAgB;QACxB,MAAM,EAAE,oBAAoB;QAC5B,MAAM,EAAE,iBAAiB;QACzB,MAAM,EAAE,qBAAqB;QAC7B,MAAM,EAAE,oBAAoB;QAC5B,MAAM,EAAE,cAAc;QACtB,MAAM,EAAE,iBAAiB;KAC5B,CAAC;IAEY,iBAAY,GAAQ;QAC9B,eAAe,EAAE;YACb,CAAC,EAAE,aAAa;YAChB,CAAC,EAAE,QAAQ;YACX,CAAC,EAAE,gBAAgB;YACnB,CAAC,EAAE,mBAAmB;YACtB,CAAC,EAAE,kBAAkB;YACrB,CAAC,EAAE,kBAAkB;YACrB,CAAC,EAAE,gBAAgB;YACnB,CAAC,EAAE,eAAe;YAClB,CAAC,EAAE,gBAAgB;SACtB,EAAE,YAAY,EAAE;YACb,CAAC,EAAE,SAAS;YACZ,CAAC,EAAE,SAAS;YACZ,CAAC,EAAE,uBAAuB;YAC1B,CAAC,EAAE,MAAM;YACT,CAAC,EAAE,WAAW;YACd,CAAC,EAAE,SAAS;YACZ,CAAC,EAAE,SAAS;YACZ,GAAG,EAAE,OAAO;SACf,EAAE,WAAW,EAAE;YACZ,CAAC,EAAE,SAAS;YACZ,CAAC,EAAE,UAAU;YACb,CAAC,EAAE,aAAa;YAChB,CAAC,EAAE,+BAA+B;YAClC,CAAC,EAAE,OAAO;YACV,CAAC,EAAE,cAAc;YACjB,EAAE,EAAE,gBAAgB;YACpB,EAAE,EAAE,OAAO;YACX,EAAE,EAAE,uCAAuC;YAC3C,EAAE,EAAE,wCAAwC;YAC5C,EAAE,EAAE,yCAAyC;YAC7C,EAAE,EAAE,qCAAqC;YACzC,EAAE,EAAE,kBAAkB;YACtB,EAAE,EAAE,kBAAkB;YACtB,EAAE,EAAE,kBAAkB;YACtB,EAAE,EAAE,KAAK;YACT,EAAE,EAAE,KAAK;YACT,EAAE,EAAE,KAAK;YACT,EAAE,EAAE,KAAK;YACT,EAAE,EAAE,qBAAqB;YACzB,GAAG,EAAE,OAAO;SACf,EAAE,KAAK,EAAE;YACN,MAAM,EAAE,oBAAoB;YAC5B,MAAM,EAAE,aAAa;YACrB,MAAM,EAAE,kCAAkC;YAC1C,MAAM,EAAE,8BAA8B;YACtC,MAAM,EAAE,oCAAoC;YAC5C,MAAM,EAAE,+DAA+D;YACvE,MAAM,EAAE,2DAA2D;YACnE,MAAM,EAAE,2CAA2C;YACnD,MAAM,EAAE,+BAA+B;YACvC,MAAM,EAAE,wBAAwB;YAChC,MAAM,EAAE,mDAAmD;YAC3D,MAAM,EAAE,+CAA+C;YACvD,MAAM,EAAE,mBAAmB;YAC3B,MAAM,EAAE,qCAAqC;YAC7C,MAAM,EAAE,gEAAgE;YACxE,MAAM,EAAE,4DAA4D;YACpE,MAAM,EAAE,4DAA4D;YACpE,MAAM,EAAE,uFAAuF;YAC/F,MAAM,EAAE,mFAAmF;YAC3F,MAAM,EAAE,gDAAgD;YACxD,MAAM,EAAE,2EAA2E;YACnF,MAAM,EAAE,uEAAuE;SAClF,EAAE,aAAa,EAAE;YACd,CAAC,EAAE,aAAa;YAChB,CAAC,EAAE,4BAA4B;YAC/B,CAAC,EAAE,4BAA4B;YAC/B,CAAC,EAAE,8BAA8B;YACjC,CAAC,EAAE,8BAA8B;YACjC,CAAC,EAAE,kBAAkB;YACrB,CAAC,EAAE,gCAAgC;SACtC,EAAE,gBAAgB,EAAE;YACjB,CAAC,EAAE,UAAU,EAAE,CAAC,EAAE,WAAW,EAAE,CAAC,EAAE,UAAU,EAAE,CAAC,EAAE,aAAa;SACjE,EAAE,SAAS,EAAE;YACV,CAAC,EAAE,uBAAuB;SAC7B,EAAE,cAAc,EAAE;YACf,CAAC,EAAE,gBAAgB,EAAE,CAAC,EAAE,gBAAgB;SAC3C,EAAE,YAAY,EAAE;YACb,CAAC,EAAE,oBAAoB,EAAE,CAAC,EAAE,sBAAsB;SACrD,EAAE,WAAW,EAAE;YACZ,CAAC,EAAE,MAAM,EAAE,CAAC,EAAE,aAAa,EAAE,CAAC,EAAE,cAAc,EAAE,CAAC,EAAE,eAAe,EAAE,CAAC,EAAE,gBAAgB;SAC1F,EAAE,QAAQ,EAAE;YACT,CAAC,EAAE,QAAQ,EAAE,CAAC,EAAE,MAAM,EAAE,CAAC,EAAE,MAAM;SACpC,EAAE,UAAU,EAAE;YACX,CAAC,EAAE,QAAQ,EAAE,CAAC,EAAE,gBAAgB,EAAE,CAAC,EAAE,iBAAiB;SACzD,EAAE,SAAS,EAAE;YACV,CAAC,EAAE,QAAQ,EAAE,CAAC,EAAE,MAAM,EAAE,CAAC,EAAE,MAAM;SACpC,EAAE,oBAAoB,EAAE;YACrB,CAAC,EAAE,SAAS,EAAE,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,YAAY,EAAE,CAAC,EAAE,cAAc;SAC/D,EAAE,UAAU,EAAE;YACX,CAAC,EAAE,KAAK;SACX;QAED,UAAU,EAAE;YACR,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,GAAG,EAAE,CAAC,EAAE,IAAI,EAAE,CAAC,EAAE,IAAI,EAAE,CAAC,EAAE,GAAG,EAAE,CAAC,EAAE,GAAG,EAAE,CAAC,EAAE,GAAG;SAC1D;KACJ,CAAC;IAmeN,WAAC;CAvuBD,AAuuBC,IAAA;SAvuBY,IAAI","file":"exif.js","sourceRoot":"","sourcesContent":["export class Fraction extends Number {\n    numerator: number;\n    denominator: number;\n}\n\n\nexport interface IImageExtended extends HTMLImageElement {\n    exifdata: any;\n    iptcdata: any;\n}\n\n// Console debug wrapper that makes code looks a little bit cleaner\nexport class Debug {\n    public static log(...args: any[]) {\n        if (Exif.debug) {\n            console.log(args);\n        }\n    }\n}\n\nexport class Exif {\n\n    public static debug: boolean = false;\n\n    public static IptcFieldMap: any = {\n        0x78: 'caption',\n        0x6E: 'credit',\n        0x19: 'keywords',\n        0x37: 'dateCreated',\n        0x50: 'byline',\n        0x55: 'bylineTitle',\n        0x7A: 'captionWriter',\n        0x69: 'headline',\n        0x74: 'copyright',\n        0x0F: 'category'\n    };\n\n    public static Tags: any = {\n\n        // version tags\n        0x9000: 'ExifVersion',             // EXIF version\n        0xA000: 'FlashpixVersion',         // Flashpix format version\n\n        // colorspace tags\n        0xA001: 'ColorSpace',              // Color space information tag\n\n        // image configuration\n        0xA002: 'PixelXDimension',         // Valid width of meaningful image\n        0xA003: 'PixelYDimension',         // Valid height of meaningful image\n        0x9101: 'ComponentsConfiguration', // Information about channels\n        0x9102: 'CompressedBitsPerPixel',  // Compressed bits per pixel\n\n        // user information\n        0x927C: 'MakerNote',               // Any desired information written by the manufacturer\n        0x9286: 'UserComment',             // Comments by user\n\n        // related file\n        0xA004: 'RelatedSoundFile',        // Name of related sound file\n\n        // date and time\n        0x9003: 'DateTimeOriginal',        // Date and time when the original image was generated\n        0x9004: 'DateTimeDigitized',       // Date and time when the image was stored digitally\n        0x9290: 'SubsecTime',              // Fractions of seconds for DateTime\n        0x9291: 'SubsecTimeOriginal',      // Fractions of seconds for DateTimeOriginal\n        0x9292: 'SubsecTimeDigitized',     // Fractions of seconds for DateTimeDigitized\n\n        // picture-taking conditions\n        0x829A: 'ExposureTime',            // Exposure time (in seconds)\n        0x829D: 'FNumber',                 // F number\n        0x8822: 'ExposureProgram',         // Exposure program\n        0x8824: 'SpectralSensitivity',     // Spectral sensitivity\n        0x8827: 'ISOSpeedRatings',         // ISO speed rating\n        0x8828: 'OECF',                    // Optoelectric conversion factor\n        0x9201: 'ShutterSpeedValue',       // Shutter speed\n        0x9202: 'ApertureValue',           // Lens aperture\n        0x9203: 'BrightnessValue',         // Value of brightness\n        0x9204: 'ExposureBias',            // Exposure bias\n        0x9205: 'MaxApertureValue',        // Smallest F number of lens\n        0x9206: 'SubjectDistance',         // Distance to subject in meters\n        0x9207: 'MeteringMode',            // Metering mode\n        0x9208: 'LightSource',             // Kind of light source\n        0x9209: 'Flash',                   // Flash status\n        0x9214: 'SubjectArea',             // Location and area of main subject\n        0x920A: 'FocalLength',             // Focal length of the lens in mm\n        0xA20B: 'FlashEnergy',             // Strobe energy in BCPS\n        0xA20C: 'SpatialFrequencyResponse',    //\n        0xA20E: 'FocalPlaneXResolution',   // Number of pixels in width direction per FocalPlaneResolutionUnit\n        0xA20F: 'FocalPlaneYResolution',   // Number of pixels in height direction per FocalPlaneResolutionUnit\n        0xA210: 'FocalPlaneResolutionUnit',    // Unit for measuring FocalPlaneXResolution and FocalPlaneYResolution\n        0xA214: 'SubjectLocation',         // Location of subject in image\n        0xA215: 'ExposureIndex',           // Exposure index selected on camera\n        0xA217: 'SensingMethod',           // Image sensor type\n        0xA300: 'FileSource',              // Image source (3 == DSC)\n        0xA301: 'SceneType',               // Scene type (1 == directly photographed)\n        0xA302: 'CFAPattern',              // Color filter array geometric pattern\n        0xA401: 'CustomRendered',          // Special processing\n        0xA402: 'ExposureMode',            // Exposure mode\n        0xA403: 'WhiteBalance',            // 1 = auto white balance, 2 = manual\n        0xA404: 'DigitalZoomRation',       // Digital zoom ratio\n        0xA405: 'FocalLengthIn35mmFilm',   // Equivalent foacl length assuming 35mm film camera (in mm)\n        0xA406: 'SceneCaptureType',        // Type of scene\n        0xA407: 'GainControl',             // Degree of overall image gain adjustment\n        0xA408: 'Contrast',                // Direction of contrast processing applied by camera\n        0xA409: 'Saturation',              // Direction of saturation processing applied by camera\n        0xA40A: 'Sharpness',               // Direction of sharpness processing applied by camera\n        0xA40B: 'DeviceSettingDescription',    //\n        0xA40C: 'SubjectDistanceRange',    // Distance to subject\n\n        // other tags\n        0xA005: 'InteroperabilityIFDPointer', 0xA420: 'ImageUniqueID'  // Identifier assigned uniquely to each image\n    };\n\n    public static TiffTags: any = {\n        0x0100: 'ImageWidth',\n        0x0101: 'ImageHeight',\n        0x8769: 'ExifIFDPointer',\n        0x8825: 'GPSInfoIFDPointer',\n        0xA005: 'InteroperabilityIFDPointer',\n        0x0102: 'BitsPerSample',\n        0x0103: 'Compression',\n        0x0106: 'PhotometricInterpretation',\n        0x0112: 'Orientation',\n        0x0115: 'SamplesPerPixel',\n        0x011C: 'PlanarConfiguration',\n        0x0212: 'YCbCrSubSampling',\n        0x0213: 'YCbCrPositioning',\n        0x011A: 'XResolution',\n        0x011B: 'YResolution',\n        0x0128: 'ResolutionUnit',\n        0x0111: 'StripOffsets',\n        0x0116: 'RowsPerStrip',\n        0x0117: 'StripByteCounts',\n        0x0201: 'JPEGInterchangeFormat',\n        0x0202: 'JPEGInterchangeFormatLength',\n        0x012D: 'TransferFunction',\n        0x013E: 'WhitePoint',\n        0x013F: 'PrimaryChromaticities',\n        0x0211: 'YCbCrCoefficients',\n        0x0214: 'ReferenceBlackWhite',\n        0x0132: 'DateTime',\n        0x010E: 'ImageDescription',\n        0x010F: 'Make',\n        0x0110: 'Model',\n        0x0131: 'Software',\n        0x013B: 'Artist',\n        0x8298: 'Copyright'\n    };\n\n    public static GPSTags: any = {\n        0x0000: 'GPSVersionID',\n        0x0001: 'GPSLatitudeRef',\n        0x0002: 'GPSLatitude',\n        0x0003: 'GPSLongitudeRef',\n        0x0004: 'GPSLongitude',\n        0x0005: 'GPSAltitudeRef',\n        0x0006: 'GPSAltitude',\n        0x0007: 'GPSTimeStamp',\n        0x0008: 'GPSSatellites',\n        0x0009: 'GPSStatus',\n        0x000A: 'GPSMeasureMode',\n        0x000B: 'GPSDOP',\n        0x000C: 'GPSSpeedRef',\n        0x000D: 'GPSSpeed',\n        0x000E: 'GPSTrackRef',\n        0x000F: 'GPSTrack',\n        0x0010: 'GPSImgDirectionRef',\n        0x0011: 'GPSImgDirection',\n        0x0012: 'GPSMapDatum',\n        0x0013: 'GPSDestLatitudeRef',\n        0x0014: 'GPSDestLatitude',\n        0x0015: 'GPSDestLongitudeRef',\n        0x0016: 'GPSDestLongitude',\n        0x0017: 'GPSDestBearingRef',\n        0x0018: 'GPSDestBearing',\n        0x0019: 'GPSDestDistanceRef',\n        0x001A: 'GPSDestDistance',\n        0x001B: 'GPSProcessingMethod',\n        0x001C: 'GPSAreaInformation',\n        0x001D: 'GPSDateStamp',\n        0x001E: 'GPSDifferential'\n    };\n\n    public static StringValues: any = {\n        ExposureProgram: {\n            0: 'Not defined',\n            1: 'Manual',\n            2: 'Normal program',\n            3: 'Aperture priority',\n            4: 'Shutter priority',\n            5: 'Creative program',\n            6: 'Action program',\n            7: 'Portrait mode',\n            8: 'Landscape mode'\n        }, MeteringMode: {\n            0: 'Unknown',\n            1: 'Average',\n            2: 'CenterWeightedAverage',\n            3: 'Spot',\n            4: 'MultiSpot',\n            5: 'Pattern',\n            6: 'Partial',\n            255: 'Other'\n        }, LightSource: {\n            0: 'Unknown',\n            1: 'Daylight',\n            2: 'Fluorescent',\n            3: 'Tungsten (incandescent light)',\n            4: 'Flash',\n            9: 'Fine weather',\n            10: 'Cloudy weather',\n            11: 'Shade',\n            12: 'Daylight fluorescent (D 5700 - 7100K)',\n            13: 'Day white fluorescent (N 4600 - 5400K)',\n            14: 'Cool white fluorescent (W 3900 - 4500K)',\n            15: 'White fluorescent (WW 3200 - 3700K)',\n            17: 'Standard light A',\n            18: 'Standard light B',\n            19: 'Standard light C',\n            20: 'D55',\n            21: 'D65',\n            22: 'D75',\n            23: 'D50',\n            24: 'ISO studio tungsten',\n            255: 'Other'\n        }, Flash: {\n            0x0000: 'Flash did not fire',\n            0x0001: 'Flash fired',\n            0x0005: 'Strobe return light not detected',\n            0x0007: 'Strobe return light detected',\n            0x0009: 'Flash fired, compulsory flash mode',\n            0x000D: 'Flash fired, compulsory flash mode, return light not detected',\n            0x000F: 'Flash fired, compulsory flash mode, return light detected',\n            0x0010: 'Flash did not fire, compulsory flash mode',\n            0x0018: 'Flash did not fire, auto mode',\n            0x0019: 'Flash fired, auto mode',\n            0x001D: 'Flash fired, auto mode, return light not detected',\n            0x001F: 'Flash fired, auto mode, return light detected',\n            0x0020: 'No flash function',\n            0x0041: 'Flash fired, red-eye reduction mode',\n            0x0045: 'Flash fired, red-eye reduction mode, return light not detected',\n            0x0047: 'Flash fired, red-eye reduction mode, return light detected',\n            0x0049: 'Flash fired, compulsory flash mode, red-eye reduction mode',\n            0x004D: 'Flash fired, compulsory flash mode, red-eye reduction mode, return light not detected',\n            0x004F: 'Flash fired, compulsory flash mode, red-eye reduction mode, return light detected',\n            0x0059: 'Flash fired, auto mode, red-eye reduction mode',\n            0x005D: 'Flash fired, auto mode, return light not detected, red-eye reduction mode',\n            0x005F: 'Flash fired, auto mode, return light detected, red-eye reduction mode'\n        }, SensingMethod: {\n            1: 'Not defined',\n            2: 'One-chip color area sensor',\n            3: 'Two-chip color area sensor',\n            4: 'Three-chip color area sensor',\n            5: 'Color sequential area sensor',\n            7: 'Trilinear sensor',\n            8: 'Color sequential linear sensor'\n        }, SceneCaptureType: {\n            0: 'Standard', 1: 'Landscape', 2: 'Portrait', 3: 'Night scene'\n        }, SceneType: {\n            1: 'Directly photographed'\n        }, CustomRendered: {\n            0: 'Normal process', 1: 'Custom process'\n        }, WhiteBalance: {\n            0: 'Auto white balance', 1: 'Manual white balance'\n        }, GainControl: {\n            0: 'None', 1: 'Low gain up', 2: 'High gain up', 3: 'Low gain down', 4: 'High gain down'\n        }, Contrast: {\n            0: 'Normal', 1: 'Soft', 2: 'Hard'\n        }, Saturation: {\n            0: 'Normal', 1: 'Low saturation', 2: 'High saturation'\n        }, Sharpness: {\n            0: 'Normal', 1: 'Soft', 2: 'Hard'\n        }, SubjectDistanceRange: {\n            0: 'Unknown', 1: 'Macro', 2: 'Close view', 3: 'Distant view'\n        }, FileSource: {\n            3: 'DSC'\n        },\n\n        Components: {\n            0: '', 1: 'Y', 2: 'Cb', 3: 'Cr', 4: 'R', 5: 'G', 6: 'B'\n        }\n    };\n\n    public static addEvent(element: EventTarget | any, event: string, handler: EventListener) {\n        if (element.addEventListener) {\n            element.addEventListener(event, handler, false);\n        } else {\n            // Hello, IE!\n            if (element.attachEvent) {\n                element.attachEvent('on' + event, handler);\n            }\n        }\n    }\n\n    public static imageHasData(img: IImageExtended) {\n        return !!(img.exifdata);\n    }\n\n    public static base64ToArrayBuffer(base64: string): ArrayBuffer {\n        base64 = base64.replace(/^data:([^;]+);base64,/gmi, '');\n        let binary: string = atob(base64);\n        let len: number = binary.length;\n        let buffer: ArrayBuffer = new ArrayBuffer(len);\n        let view: Uint8Array = new Uint8Array(buffer);\n        for (let i = 0; i < len; i++) {\n            view[i] = binary.charCodeAt(i);\n        }\n        return buffer;\n    }\n\n    public static objectURLToBlob(url: string, callback: Function) {\n        let http: XMLHttpRequest = new XMLHttpRequest();\n        http.open('GET', url, true);\n        http.responseType = 'blob';\n        http.onload = function () {\n            if (http.status === 200 || http.status === 0) {\n                callback(http.response);\n            }\n        };\n        http.send();\n    }\n\n    public static getImageData(img: IImageExtended | Blob | File, callback: Function) {\n        function handleBinaryFile(binFile: ArrayBuffer) {\n            let data = Exif.findEXIFinJPEG(binFile);\n            let iptcdata = Exif.findIPTCinJPEG(binFile);\n            (img as IImageExtended).exifdata = data || {};\n            (img as IImageExtended).iptcdata = iptcdata || {};\n            if (callback) {\n                callback.call(img);\n            }\n        }\n\n        if ('src' in img && (img as IImageExtended).src) {\n            if (/^data:/i.test((img as IImageExtended).src)) { // Data URI\n                let arrayBuffer = Exif.base64ToArrayBuffer((img as IImageExtended).src);\n                handleBinaryFile(arrayBuffer);\n            } else {\n                if (/^blob:/i.test((img as IImageExtended).src)) { // Object URL\n                    let fileReader = new FileReader();\n                    fileReader.onload = (e: any) => {\n                        handleBinaryFile(e.target.result);\n                    };\n                    Exif.objectURLToBlob((img as IImageExtended).src, (blob: Blob) => {\n                        fileReader.readAsArrayBuffer(blob);\n                    });\n                } else {\n                    let http = new XMLHttpRequest();\n                    http.onload = function () {\n                        if (http.status === 200 || http.status === 0) {\n                            handleBinaryFile(http.response);\n                        } else {\n                            throw 'Could not load image';\n                        }\n                    };\n                    http.open('GET', (img as IImageExtended).src, true);\n                    http.responseType = 'arraybuffer';\n                    http.send(null);\n                }\n            }\n        } else {\n            if (FileReader && (img instanceof Blob || img instanceof File)) {\n                let fileReader = new FileReader();\n                fileReader.onload = function (e: any) {\n                    Debug.log('Got file of length ' + e.target.result.byteLength);\n                    handleBinaryFile(e.target.result);\n                };\n\n                fileReader.readAsArrayBuffer(img);\n            }\n        }\n    }\n\n    public static findEXIFinJPEG(file: ArrayBuffer) {\n        let dataView = new DataView(file);\n\n        Debug.log('Got file of length ' + file.byteLength);\n        if ((dataView.getUint8(0) !== 0xFF) || (dataView.getUint8(1) !== 0xD8)) {\n            Debug.log('Not a valid JPEG');\n            return false; // not a valid jpeg\n        }\n\n        let offset = 2;\n        let length: number = file.byteLength;\n        let marker: number;\n\n        while (offset < length) {\n            if (dataView.getUint8(offset) !== 0xFF) {\n                Debug.log('Not a valid marker at offset ' + offset + ', found: ' + dataView.getUint8(offset));\n                return false; // not a valid marker, something is wrong\n            }\n\n            marker = dataView.getUint8(offset + 1);\n            Debug.log(marker);\n\n            // we could implement handling for other markers here,\n            // but we're only looking for 0xFFE1 for EXIF data\n            if (marker === 225) {\n                Debug.log('Found 0xFFE1 marker');\n                return Exif.readEXIFData(dataView, offset + 4); // , dataView.getUint16(offset + 2) - 2);\n                // offset += 2 + file.getShortAt(offset+2, true);\n\n            } else {\n                offset += 2 + dataView.getUint16(offset + 2);\n            }\n        }\n    }\n\n    public static findIPTCinJPEG(file: ArrayBuffer) {\n        let dataView = new DataView(file);\n\n        Debug.log('Got file of length ' + file.byteLength);\n        if ((dataView.getUint8(0) !== 0xFF) || (dataView.getUint8(1) !== 0xD8)) {\n            Debug.log('Not a valid JPEG');\n            return false; // not a valid jpeg\n        }\n\n        let offset = 2;\n        let length = file.byteLength;\n\n        let isFieldSegmentStart = function (_dataView: DataView, _offset: number) {\n            return (\n                _dataView.getUint8(_offset) === 0x38 && _dataView.getUint8(_offset + 1) === 0x42 && _dataView.getUint8(\n                    _offset + 2) === 0x49 && _dataView.getUint8(_offset + 3) === 0x4D && _dataView.getUint8(\n                    _offset + 4) === 0x04 && _dataView.getUint8(_offset + 5) === 0x04\n            );\n        };\n\n        while (offset < length) {\n\n            if (isFieldSegmentStart(dataView, offset)) {\n\n                // Get the length of the name header (which is padded to an even number of bytes)\n                let nameHeaderLength = dataView.getUint8(offset + 7);\n                if (nameHeaderLength % 2 !== 0) {\n                    nameHeaderLength += 1;\n                }\n                // Check for pre photoshop 6 format\n                if (nameHeaderLength === 0) {\n                    // Always 4\n                    nameHeaderLength = 4;\n                }\n\n                let startOffset = offset + 8 + nameHeaderLength;\n                let sectionLength = dataView.getUint16(offset + 6 + nameHeaderLength);\n\n                return Exif.readIPTCData(file, startOffset, sectionLength);\n            }\n\n            // Not the marker, continue searching\n            offset++;\n\n        }\n\n    }\n\n    public static readIPTCData(file: ArrayBuffer, startOffset: number, sectionLength: number) {\n        let dataView = new DataView(file);\n        let data: any = {};\n        let fieldValue: any, fieldName: string, dataSize: number, segmentType: any, segmentSize: number;\n        let segmentStartPos = startOffset;\n        while (segmentStartPos < startOffset + sectionLength) {\n            if (dataView.getUint8(segmentStartPos) === 0x1C && dataView.getUint8(segmentStartPos + 1) === 0x02) {\n                segmentType = dataView.getUint8(segmentStartPos + 2);\n                if (segmentType in Exif.IptcFieldMap) {\n                    dataSize = dataView.getInt16(segmentStartPos + 3);\n                    segmentSize = dataSize + 5;\n                    fieldName = Exif.IptcFieldMap[segmentType];\n                    fieldValue = Exif.getStringFromDB(dataView, segmentStartPos + 5, dataSize);\n                    // Check if we already stored a value with this name\n                    if (data.hasOwnProperty(fieldName)) {\n                        // Value already stored with this name, create multivalue field\n                        if (data[fieldName] instanceof Array) {\n                            data[fieldName].push(fieldValue);\n                        } else {\n                            data[fieldName] = [data[fieldName], fieldValue];\n                        }\n                    } else {\n                        data[fieldName] = fieldValue;\n                    }\n                }\n            }\n            segmentStartPos++;\n        }\n        return data;\n    }\n\n    public static readTags(file: DataView, tiffStart: number, dirStart: number, strings: string[],\n                           bigEnd: boolean): Object {\n        let entries: number = file.getUint16(dirStart, !bigEnd);\n        let tags: any = {};\n        let entryOffset: number;\n        let tag: string;\n\n        for (let i = 0; i < entries; i++) {\n            entryOffset = dirStart + i * 12 + 2;\n            tag = strings[file.getUint16(entryOffset, !bigEnd)];\n            if (!tag) {\n                Debug.log('Unknown tag: ' + file.getUint16(entryOffset, !bigEnd));\n            }\n            tags[tag] = Exif.readTagValue(file, entryOffset, tiffStart, dirStart, bigEnd);\n        }\n        return tags;\n    }\n\n    public static readTagValue(file: any, entryOffset: number, tiffStart: number, dirStart: number,\n                               bigEnd: boolean): any {\n        let type: number = file.getUint16(entryOffset + 2, !bigEnd);\n        let numValues = file.getUint32(entryOffset + 4, !bigEnd);\n        let valueOffset = file.getUint32(entryOffset + 8, !bigEnd) + tiffStart;\n        let offset: number;\n        let vals: any[], val: any, n: number;\n        let numerator: any;\n        let denominator: any;\n\n        switch (type) {\n            case 1: // byte, 8-bit unsigned int\n            case 7: // undefined, 8-bit byte, value depending on field\n                if (numValues === 1) {\n                    return file.getUint8(entryOffset + 8, !bigEnd);\n                } else {\n                    offset = numValues > 4 ? valueOffset : (entryOffset + 8);\n                    vals = [];\n                    for (n = 0; n < numValues; n++) {\n                        vals[n] = file.getUint8(offset + n);\n                    }\n                    return vals;\n                }\n\n            case 2: // ascii, 8-bit byte\n                offset = numValues > 4 ? valueOffset : (entryOffset + 8);\n                return Exif.getStringFromDB(file, offset, numValues - 1);\n\n            case 3: // short, 16 bit int\n                if (numValues === 1) {\n                    return file.getUint16(entryOffset + 8, !bigEnd);\n                } else {\n                    offset = numValues > 2 ? valueOffset : (entryOffset + 8);\n                    vals = [];\n                    for (n = 0; n < numValues; n++) {\n                        vals[n] = file.getUint16(offset + 2 * n, !bigEnd);\n                    }\n                    return vals;\n                }\n\n            case 4: // long, 32 bit int\n                if (numValues === 1) {\n                    return file.getUint32(entryOffset + 8, !bigEnd);\n                } else {\n                    vals = [];\n                    for (n = 0; n < numValues; n++) {\n                        vals[n] = file.getUint32(valueOffset + 4 * n, !bigEnd);\n                    }\n                    return vals;\n                }\n\n            case 5:    // rational = two long values, first is numerator, second is denominator\n                if (numValues === 1) {\n                    numerator = file.getUint32(valueOffset, !bigEnd);\n                    denominator = file.getUint32(valueOffset + 4, !bigEnd);\n                    val = new Fraction(numerator / denominator);\n                    val.numerator = numerator;\n                    val.denominator = denominator;\n                    return val;\n                } else {\n                    vals = [];\n                    for (n = 0; n < numValues; n++) {\n                        numerator = file.getUint32(valueOffset + 8 * n, !bigEnd);\n                        denominator = file.getUint32(valueOffset + 4 + 8 * n, !bigEnd);\n                        vals[n] = new Fraction(numerator / denominator);\n                        vals[n].numerator = numerator;\n                        vals[n].denominator = denominator;\n                    }\n                    return vals;\n                }\n\n            case 9: // slong, 32 bit signed int\n                if (numValues === 1) {\n                    return file.getInt32(entryOffset + 8, !bigEnd);\n                } else {\n                    vals = [];\n                    for (n = 0; n < numValues; n++) {\n                        vals[n] = file.getInt32(valueOffset + 4 * n, !bigEnd);\n                    }\n                    return vals;\n                }\n\n            case 10: // signed rational, two slongs, first is numerator, second is denominator\n                if (numValues === 1) {\n                    return file.getInt32(valueOffset, !bigEnd) / file.getInt32(valueOffset + 4, !bigEnd);\n                } else {\n                    vals = [];\n                    for (n = 0; n < numValues; n++) {\n                        vals[n] = file.getInt32(valueOffset + 8 * n, !bigEnd) / file.getInt32(valueOffset + 4 + 8 * n,\n                                !bigEnd);\n                    }\n                    return vals;\n                }\n            default:\n                break;\n        }\n    }\n\n    public static getStringFromDB(buffer: DataView, start: number, length: number): string {\n        let outstr = '';\n        for (let n = start; n < start + length; n++) {\n            outstr += String.fromCharCode(buffer.getUint8(n));\n        }\n        return outstr;\n    }\n\n    public static readEXIFData(file: DataView, start: number): any {\n        if (Exif.getStringFromDB(file, start, 4) !== 'Exif') {\n            Debug.log('Not valid EXIF data! ' + Exif.getStringFromDB(file, start, 4));\n\n            return false;\n        }\n\n        let bigEnd: boolean, tags: any, tag: string, exifData: any, gpsData: any, tiffOffset: number = start + 6;\n\n        // test for TIFF validity and endianness\n        if (file.getUint16(tiffOffset) === 0x4949) {\n            bigEnd = false;\n        } else {\n            if (file.getUint16(tiffOffset) === 0x4D4D) {\n                bigEnd = true;\n            } else {\n                Debug.log('Not valid TIFF data! (no 0x4949 or 0x4D4D)');\n                return false;\n            }\n        }\n\n        if (file.getUint16(tiffOffset + 2, !bigEnd) !== 0x002A) {\n            Debug.log('Not valid TIFF data! (no 0x002A)');\n            return false;\n        }\n\n        let firstIFDOffset = file.getUint32(tiffOffset + 4, !bigEnd);\n\n        if (firstIFDOffset < 0x00000008) {\n            Debug.log('Not valid TIFF data! (First offset less than 8)', file.getUint32(tiffOffset + 4, !bigEnd));\n            return false;\n        }\n\n        tags = Exif.readTags(file, tiffOffset, tiffOffset + firstIFDOffset, Exif.TiffTags, bigEnd);\n\n        if (tags.ExifIFDPointer) {\n            exifData = Exif.readTags(file, tiffOffset, tiffOffset + tags.ExifIFDPointer, Exif.Tags, bigEnd);\n            for (tag in exifData) {\n                if ({}.hasOwnProperty.call(exifData, tag)) {\n                    switch (tag) {\n                        case 'LightSource' :\n                        case 'Flash' :\n                        case 'MeteringMode' :\n                        case 'ExposureProgram' :\n                        case 'SensingMethod' :\n                        case 'SceneCaptureType' :\n                        case 'SceneType' :\n                        case 'CustomRendered' :\n                        case 'WhiteBalance' :\n                        case 'GainControl' :\n                        case 'Contrast' :\n                        case 'Saturation' :\n                        case 'Sharpness' :\n                        case 'SubjectDistanceRange' :\n                        case 'FileSource' :\n                            exifData[tag] = Exif.StringValues[tag][exifData[tag]];\n                            break;\n                        case 'ExifVersion' :\n                        case 'FlashpixVersion' :\n                            exifData[tag] = String.fromCharCode(exifData[tag][0], exifData[tag][1], exifData[tag][2],\n                                exifData[tag][3]);\n                            break;\n                        case 'ComponentsConfiguration' :\n                            let compopents = 'Components';\n                            exifData[tag] = Exif.StringValues[compopents][exifData[tag][0]] + Exif.StringValues[compopents][exifData[tag][1]] + Exif.StringValues[compopents][exifData[tag][2]] + Exif.StringValues[compopents][exifData[tag][3]];\n                            break;\n                        default:\n                            break;\n                    }\n                    tags[tag] = exifData[tag];\n                }\n            }\n        }\n\n        if (tags.GPSInfoIFDPointer) {\n            gpsData = Exif.readTags(file, tiffOffset, tiffOffset + tags.GPSInfoIFDPointer, Exif.GPSTags, bigEnd);\n            for (tag in gpsData) {\n                if ({}.hasOwnProperty.call(gpsData, tag)) {\n                    switch (tag) {\n                        case 'GPSVersionID' :\n                            gpsData[tag] = gpsData[tag][0] + '.' + gpsData[tag][1] + '.' + gpsData[tag][2] + '.' + gpsData[tag][3];\n                            break;\n                        default:\n                            break;\n                    }\n                    tags[tag] = gpsData[tag];\n                }\n            }\n        }\n\n        return tags;\n    }\n\n    public static getData(img: IImageExtended | HTMLImageElement, callback: Function) {\n\n        if ((img instanceof Image || img instanceof HTMLImageElement) && !img.complete) {\n            return false;\n        }\n\n        if (!Exif.imageHasData((img as IImageExtended))) {\n            Exif.getImageData((img as IImageExtended), callback);\n        } else {\n            if (callback) {\n                callback.call(img);\n            }\n        }\n        return true;\n    }\n\n    public static getTag(img: any, tag: string) {\n        if (!Exif.imageHasData(img)) {\n            return;\n        }\n        return img.exifdata[tag];\n    };\n\n    public static getAllTags(img: any) {\n        if (!Exif.imageHasData(img)) {\n            return {};\n        }\n        let a: string, data: any = img.exifdata, tags: any = {};\n        for (a in data) {\n            if (data.hasOwnProperty(a)) {\n                tags[a] = data[a];\n            }\n        }\n        return tags;\n    };\n\n    public static pretty(img: IImageExtended) {\n        if (!Exif.imageHasData(img)) {\n            return '';\n        }\n        let a: any, data: any = img.exifdata, strPretty = '';\n        for (a in data) {\n            if (data.hasOwnProperty(a)) {\n                if (typeof data[a] === 'object') {\n                    if (data[a] instanceof Number) {\n                        strPretty += `${a} : ${data[a]} [${data[a].numerator}/${data[a].denominator}]\\r\\n`;\n                    } else {\n                        strPretty += `${a} : [${data[a].length} values]\\r\\n`;\n                    }\n                } else {\n                    strPretty += `${a} : ${data[a]}\\r\\n`;\n                }\n            }\n        }\n        return strPretty;\n    }\n\n    public static readFromBinaryFile(file: ArrayBuffer) {\n        return Exif.findEXIFinJPEG(file);\n    }\n}\n"]}