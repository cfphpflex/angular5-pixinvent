{"version":3,"sources":["./src/app/taskboard-ngrx/store/taskboard.actions.ts","./src/app/taskboard-ngrx/store/taskboard.reducers.ts","./src/app/taskboard-ngrx/taskboard-ngrx-routing.module.ts","./src/app/taskboard-ngrx/taskboard-ngrx.component.html","./src/app/taskboard-ngrx/taskboard-ngrx.component.scss","./src/app/taskboard-ngrx/taskboard-ngrx.component.ts","./src/app/taskboard-ngrx/taskboard-ngrx.model.ts","./src/app/taskboard-ngrx/taskboard-ngrx.module.ts"],"names":[],"mappings":"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","file":"taskboard-ngrx.module.chunk.js","sourcesContent":["import { Action } from '@ngrx/store';\r\n\r\nimport { Task } from '../taskboard-ngrx.model';\r\n\r\nexport const ADD_TODO = 'ADD_TODO';\r\n\r\nexport class AddTodo implements Action {\r\n    readonly type = ADD_TODO;\r\n    constructor(public payload: Task) { }\r\n}\r\n\r\nexport type TaskActions = AddTodo;\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/taskboard-ngrx/store/taskboard.actions.ts","import { Task } from '../taskboard-ngrx.model';\r\nimport * as TaskActions from './taskboard.actions';\r\n\r\nexport interface FeatureState {\r\n    task: State;\r\n}\r\n\r\nexport interface State {\r\n    todo: Task[];\r\n    inProcess: Task[];\r\n    backLog: Task[];\r\n    completed: Task[];\r\n}\r\n\r\nconst initialState: State = {\r\n    todo: [\r\n        new Task(\r\n            'Responsive',\r\n            'Etiam porta sem malesuada magna mollis euismod.',\r\n            'May 17',\r\n            'Elizabeth Elliott',\r\n            'assets/img/portrait/small/avatar-s-3.png',\r\n            'New'),\r\n        new Task(\r\n            'QA Testing',\r\n            'Etiam porta sem malesuada magna mollis euismod.',\r\n            'May 17',\r\n            'Elizabeth Elliott',\r\n            'assets/img/portrait/small/avatar-s-3.png',\r\n            'New'),\r\n        new Task(\r\n            'Budget',\r\n            'Etiam porta sem malesuada magna mollis euismod.',\r\n            'May 17',\r\n            'Elizabeth Elliott',\r\n            'assets/img/portrait/small/avatar-s-3.png',\r\n            'New')\r\n    ],\r\n    inProcess: [\r\n        new Task(\r\n            'checklist',\r\n            'Etiam porta sem malesuada magna mollis euismod.',\r\n            'Apr 11',\r\n            'Bruce Reid',\r\n            'assets/img/portrait/small/avatar-s-1.png',\r\n            'In Process'),\r\n        new Task(\r\n            'Navigation',\r\n            'Etiam porta sem malesuada magna mollis euismod.',\r\n            'Apr 11',\r\n            'Bruce Reid',\r\n            'assets/img/portrait/small/avatar-s-1.png',\r\n            'In Process'),\r\n        new Task(\r\n            'Bootstrap 4',\r\n            'Etiam porta sem malesuada magna mollis euismod.',\r\n            'Apr 11',\r\n            'Bruce Reid',\r\n            'assets/img/portrait/small/avatar-s-1.png',\r\n            'In Process')\r\n    ],\r\n    backLog: [\r\n        new Task(\r\n            'Assessment',\r\n            'Etiam porta sem malesuada magna mollis euismod.',\r\n            'Jun 19',\r\n            'Kelly Reyes',\r\n            'assets/img/portrait/small/avatar-s-5.png',\r\n            'Pending'),\r\n        new Task(\r\n            'Schedule',\r\n            'Etiam porta sem malesuada magna mollis euismod.',\r\n            'Jun 19',\r\n            'Kelly Reyes',\r\n            'assets/img/portrait/small/avatar-s-5.png',\r\n            'Pending'),\r\n        new Task(\r\n            'Unit tests',\r\n            'Etiam porta sem malesuada magna mollis euismod.',\r\n            'Jun 19',\r\n            'Kelly Reyes',\r\n            'assets/img/portrait/small/avatar-s-5.png',\r\n            'Pending')\r\n    ],\r\n    completed: [\r\n        new Task(\r\n            'Angular 5',\r\n            'Etiam porta sem malesuada magna mollis euismod.',\r\n            'Aug 22',\r\n            'Sara Ali',\r\n            'assets/img/portrait/small/avatar-s-7.png',\r\n            'Completed'),\r\n        new Task(\r\n            'Fields',\r\n            'Etiam porta sem malesuada magna mollis euismod.',\r\n            'Aug 22',\r\n            'Sara Ali',\r\n            'assets/img/portrait/small/avatar-s-7.png',\r\n            'Completed'),\r\n        new Task(\r\n            'Task board',\r\n            'Etiam porta sem malesuada magna mollis euismod.',\r\n            'Aug 22',\r\n            'Sara Ali',\r\n            'assets/img/portrait/small/avatar-s-7.png',\r\n            'Completed')\r\n    ]\r\n\r\n};\r\n\r\nexport function taskReducer(state = initialState, action: TaskActions.TaskActions) {\r\n    switch (action.type) {\r\n        case (TaskActions.ADD_TODO):\r\n            const todo = [...state.todo];\r\n            return {\r\n                ...state,\r\n                todo: [...state.todo, action.payload]\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/taskboard-ngrx/store/taskboard.reducers.ts","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\n\r\nimport { TaskboardNGRXComponent } from './taskboard-ngrx.component';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n     component: TaskboardNGRXComponent,\r\n    data: {\r\n      title: 'Taskboard'\r\n    },\r\n    \r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule],\r\n})\r\nexport class TaskboardNGRXRoutingModule { }\n\n\n// WEBPACK FOOTER //\n// ./src/app/taskboard-ngrx/taskboard-ngrx-routing.module.ts","module.exports = \"<div class=\\\"row\\\">\\r\\n  <div class=\\\"col-sm-12\\\">\\r\\n    <div class=\\\"content-header\\\">Task Board NgRx</div>\\r\\n    <p class=\\\"content-sub-header\\\"></p>\\r\\n  </div>\\r\\n</div>\\r\\n<!-- Taskboard Starts -->\\r\\n<section id=\\\"taskboard\\\">\\r\\n\\r\\n\\r\\n  <div class=\\\"row\\\">\\r\\n    <div class=\\\"col-md-3 col-12\\\">\\r\\n      <h4 class=\\\"ml-2 mt-2 text-bold-500\\\"><i class=\\\"ft-list mr-1\\\"></i> To Dos</h4>\\r\\n      <div class='dragdrop-container' [dragula]='\\\"task-group\\\"' [dragulaModel]='todo'>\\r\\n        <div *ngFor='let todo of todo'>\\r\\n          <div class=\\\"card\\\">\\r\\n            <div class=\\\"card-block pt-3\\\">\\r\\n              <div class=\\\"clearfix\\\">\\r\\n                <h5 class=\\\"text-bold-500 primary float-left\\\">{{todo.taskTitle}}</h5>\\r\\n                <div class=\\\"actions float-right\\\">\\r\\n                  <i class=\\\"ft-edit mr-1 info\\\"></i>\\r\\n                  <i class=\\\"ft-trash-2 danger\\\"></i>\\r\\n                </div>\\r\\n              </div>\\r\\n              <p>{{todo.taskMessage}}</p>\\r\\n              <img [src]=\\\"[todo.assignedTo]\\\" class=\\\"rounded-circle width-50 mr-2\\\"> <span class=\\\"primary\\\">{{todo.createdOn}}</span>\\r\\n            </div>\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n    <div class=\\\"col-md-3 col-12\\\">\\r\\n      <h4 class=\\\"ml-2 mt-2 text-bold-500\\\"><i class=\\\"ft-trending-up mr-1\\\"></i> In Progress</h4>\\r\\n      <div class='dragdrop-container' [dragula]='\\\"task-group\\\"' [dragulaModel]='inProcess'>\\r\\n        <div *ngFor='let inProcess of inProcess'>\\r\\n          <div class=\\\"card\\\">\\r\\n            <div class=\\\"card-block pt-3\\\">\\r\\n              <div class=\\\"clearfix\\\">\\r\\n                <h5 class=\\\"text-bold-500 info float-left\\\">{{inProcess.taskTitle}}</h5>\\r\\n                <div class=\\\"actions float-right\\\">\\r\\n                  <i class=\\\"ft-edit mr-1 info\\\"></i>\\r\\n                  <i class=\\\"ft-trash-2 danger\\\"></i>\\r\\n                </div>\\r\\n              </div>\\r\\n              <p>{{inProcess.taskMessage}}</p>\\r\\n              <img [src]=\\\"[inProcess.assignedTo]\\\" class=\\\"rounded-circle width-50 mr-2\\\"> <span class=\\\"info\\\">{{inProcess.createdOn}}</span>\\r\\n            </div>\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n\\r\\n    <div class=\\\"col-md-3 col-12\\\">\\r\\n      <h4 class=\\\"ml-2 mt-2 text-bold-500\\\"><i class=\\\"ft-thumbs-up mr-1\\\"></i>Completed</h4>\\r\\n      <div class='dragdrop-container' [dragula]='\\\"task-group\\\"' [dragulaModel]='completed'>\\r\\n        <div *ngFor='let completed of completed'>\\r\\n          <div class=\\\"card\\\">\\r\\n            <div class=\\\"card-block pt-3\\\">\\r\\n              <div class=\\\"clearfix\\\">\\r\\n                <h5 class=\\\"text-bold-500 success float-left\\\">{{completed.taskTitle}}</h5>\\r\\n                <div class=\\\"actions float-right\\\">\\r\\n                  <i class=\\\"ft-edit mr-1 info\\\"></i>\\r\\n                  <i class=\\\"ft-trash-2 danger\\\"></i>\\r\\n                </div>\\r\\n              </div>\\r\\n              <p>{{completed.taskMessage}}</p>\\r\\n              <img [src]=\\\"[completed.assignedTo]\\\" class=\\\"rounded-circle width-50 mr-2\\\"> <span class=\\\"success\\\">{{completed.createdOn}}</span>\\r\\n            </div>\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n\\r\\n    <div class=\\\"col-md-3 col-12\\\">\\r\\n      <h4 class=\\\"ml-2 mt-2 text-bold-500\\\"><i class=\\\"ft-alert-octagon mr-1\\\"></i>On Hold</h4>\\r\\n      <div class='dragdrop-container' [dragula]='\\\"task-group\\\"' [dragulaModel]='backLog'>\\r\\n        <div *ngFor='let backLog of backLog'>\\r\\n          <div class=\\\"card\\\">\\r\\n            <div class=\\\"card-block pt-3\\\">\\r\\n              <div class=\\\"clearfix\\\">\\r\\n                <h5 class=\\\"text-bold-500 warning float-left\\\">{{backLog.taskTitle}}</h5>\\r\\n                <div class=\\\"actions float-right\\\">\\r\\n                  <i class=\\\"ft-edit mr-1 info\\\"></i>\\r\\n                  <i class=\\\"ft-trash-2 danger\\\"></i>\\r\\n                </div>\\r\\n              </div>\\r\\n              <p>{{backLog.taskMessage}}</p>\\r\\n              <img [src]=\\\"[backLog.assignedTo]\\\" class=\\\"rounded-circle width-50 mr-2\\\"> <span class=\\\"warning\\\">{{backLog.createdOn}}</span>\\r\\n            </div>\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n\\r\\n  <section class=\\\"taskboard-app-form bg-blue-grey bg-lighten-5\\\">\\r\\n    <div class=\\\"card\\\">\\r\\n      <div class=\\\"card-block pt-3\\\">\\r\\n        <h5 class=\\\"text-bold-500\\\">Create new Task</h5>\\r\\n        <form class=\\\"taskboard-app-input row\\\">\\r\\n          <fieldset class=\\\"form-group position-relative has-icon-left col-md-4 col-12 mb-1\\\">\\r\\n            <div class=\\\"form-control-position\\\">\\r\\n              <i class=\\\"icon-emoticon-smile\\\"></i>\\r\\n            </div>\\r\\n            <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"todoTitle\\\" placeholder=\\\"Title\\\" (keydown.enter)=\\\"$event.preventDefault()\\\"\\r\\n              #todoTitle>\\r\\n            <div class=\\\"form-control-position control-position-right\\\">\\r\\n              <i class=\\\"ft-image\\\"></i>\\r\\n            </div>\\r\\n          </fieldset>\\r\\n          <fieldset class=\\\"form-group position-relative has-icon-left col-md-6 col-12 mb-1\\\">\\r\\n            <div class=\\\"form-control-position\\\">\\r\\n              <i class=\\\"icon-emoticon-smile\\\"></i>\\r\\n            </div>\\r\\n            <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"todoMessage\\\" placeholder=\\\"Message\\\" (keydown.enter)=\\\"$event.preventDefault()\\\"\\r\\n              #todoMessage>\\r\\n            <div class=\\\"form-control-position control-position-right\\\">\\r\\n              <i class=\\\"ft-image\\\"></i>\\r\\n            </div>\\r\\n          </fieldset>\\r\\n         \\r\\n          <fieldset class=\\\"form-group position-relative has-icon-left col-md-2 col-12 mb-1\\\">\\r\\n            <button type=\\\"button\\\" class=\\\"btn btn-raised btn-primary\\\" (click)=\\\"onAddTask()\\\">\\r\\n              <i class=\\\"fa fa-paper-plane-o hidden-lg-up\\\"></i> Create</button>\\r\\n          </fieldset>\\r\\n        </form>\\r\\n      </div>\\r\\n    </div>\\r\\n  </section>\\r\\n\\r\\n</section>\\r\\n<!-- Taskboard Ends -->\\r\\n\\r\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/taskboard-ngrx/taskboard-ngrx.component.html\n// module id = ./src/app/taskboard-ngrx/taskboard-ngrx.component.html\n// module chunks = taskboard-ngrx.module","module.exports = \".gh-fork {\\n  position: fixed;\\n  top: 0;\\n  right: 0;\\n  border: 0; }\\n\\n/* dragula-specific example page styles */\\n\\n.dragdrop-wrapper {\\n  display: table; }\\n\\n/* .dragdrop-container {\\r\\n    display: table-cell;\\r\\n    background-color: rgba(255, 255, 255, 0.2);\\r\\n    width: 25%;\\r\\n  } */\\n\\n.dragdrop-container:nth-child(odd) {\\n  background-color: rgba(0, 0, 0, 0.2); }\\n\\n/*\\r\\n   * note that styling gu-mirror directly is a bad practice because it's too generic.\\r\\n   * you're better off giving the draggable elements a unique class and styling that directly!\\r\\n   */\\n\\n.dragdrop-container > div,\\n.gu-mirror {\\n  -webkit-transition: opacity 0.4s ease-in-out;\\n  transition: opacity 0.4s ease-in-out; }\\n\\n.dragdrop-container > div {\\n  cursor: move;\\n  cursor: grab;\\n  cursor: -webkit-grab; }\\n\\n.gu-mirror {\\n  cursor: grabbing;\\n  cursor: -webkit-grabbing; }\\n\\n.dragdrop-container .ex-moved {\\n  background-color: #e74c3c; }\\n\\n.dragdrop-container.ex-over {\\n  background-color: rgba(255, 255, 255, 0.3); }\\n\\n#left-lovehandles > div,\\n#right-lovehandles > div {\\n  cursor: initial; }\\n\\n.handle {\\n  padding: 0 5px;\\n  margin-right: 5px;\\n  background-color: rgba(0, 0, 0, 0.4);\\n  cursor: move; }\\n\\n.image-thing {\\n  margin: 20px 0;\\n  display: block;\\n  text-align: center; }\\n\\n.slack-join {\\n  position: absolute;\\n  font-weight: normal;\\n  font-size: 14px;\\n  right: 10px;\\n  top: 50%;\\n  margin-top: -8px;\\n  line-height: 16px; }\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/taskboard-ngrx/taskboard-ngrx.component.scss\n// module id = ./src/app/taskboard-ngrx/taskboard-ngrx.component.scss\n// module chunks = taskboard-ngrx.module","import { Component, ViewEncapsulation, ViewChild, ElementRef, OnInit } from '@angular/core';\r\nimport { Task } from './taskboard-ngrx.model';\r\n\r\nimport { Store } from '@ngrx/store';\r\nimport { Observable } from 'rxjs/Observable';\r\nimport { Subscription } from 'rxjs/Subscription';\r\n\r\nimport * as TaskboadActions from './store/taskboard.actions';\r\nimport * as fromTaskboard from './store/taskboard.reducers';\r\n\r\n@Component({\r\n  selector: 'app-ngrx-taskboard',\r\n  templateUrl: './taskboard-ngrx.component.html',\r\n  styleUrls: ['./taskboard-ngrx.component.scss'],\r\n  encapsulation: ViewEncapsulation.None\r\n})\r\nexport class TaskboardNGRXComponent implements OnInit {\r\n\r\n  @ViewChild('todoTitle') titleInputRef: ElementRef;\r\n  @ViewChild('todoMessage') messageInputRef: ElementRef;\r\n  subscription: Subscription;\r\n  taskboardState: Observable<fromTaskboard.State>;\r\n\r\n  public todo: Task[];\r\n  public inProcess: Task[];\r\n  public backLog: Task[];\r\n  public completed: Task[];\r\n\r\n  constructor(private elRef: ElementRef, private store: Store<fromTaskboard.FeatureState>) {\r\n\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.taskboardState = this.store.select('task');\r\n    this.subscription = this.taskboardState.subscribe(\r\n      data => {\r\n        this.todo = data.todo;\r\n        this.inProcess = data.inProcess;\r\n        this.backLog = data.backLog;\r\n        this.completed = data.completed;\r\n      }\r\n    );\r\n  }\r\n\r\n  onAddTask() {\r\n    if (this.messageInputRef.nativeElement.value != \"\" && this.titleInputRef.nativeElement.value != \"\") {\r\n      this.store.dispatch(new TaskboadActions.AddTodo(new Task(\r\n        this.titleInputRef.nativeElement.value,\r\n        this.messageInputRef.nativeElement.value,\r\n        'Nov 12',\r\n        'Elizabeth Elliott',\r\n        'assets/img/portrait/small/avatar-s-3.png',\r\n        'New'\r\n      )));\r\n    }\r\n    this.titleInputRef.nativeElement.value = \"\";\r\n    this.messageInputRef.nativeElement.value = \"\";\r\n    this.titleInputRef.nativeElement.focus();\r\n  }\r\n\r\n\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/taskboard-ngrx/taskboard-ngrx.component.ts","export class Task {\r\n    public taskTitle: string;\r\n    public taskMessage: string;\r\n    public createdOn: string;\r\n    public createdBy: string;\r\n    public assignedTo: string;\r\n    public status: string;\r\n  \r\n    constructor(taskTitle: string, taskMessage:string, createdOn: string, createdBy: string, assignedTo: string, status: string) {\r\n      this.taskTitle = taskTitle;\r\n      this.taskMessage = taskMessage;\r\n      this.createdOn = createdOn;\r\n      this.createdBy = createdBy;\r\n      this.assignedTo = assignedTo;\r\n      this.status = status;\r\n    }\r\n  }\r\n  \n\n\n// WEBPACK FOOTER //\n// ./src/app/taskboard-ngrx/taskboard-ngrx.model.ts","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from \"@angular/common\";\r\nimport { StoreModule } from '@ngrx/store';\r\n\r\nimport { DragulaModule } from 'ng2-dragula';\r\nimport { TaskboardNGRXRoutingModule } from \"./taskboard-ngrx-routing.module\";\r\n\r\nimport { TaskboardNGRXComponent } from \"./taskboard-ngrx.component\";\r\nimport { taskReducer } from '../taskboard-ngrx/store/taskboard.reducers';\r\n\r\n\r\n@NgModule({\r\n    imports: [\r\n        CommonModule,\r\n        TaskboardNGRXRoutingModule,\r\n        DragulaModule,\r\n        StoreModule.forFeature('task', taskReducer)\r\n    ],\r\n    declarations: [\r\n        TaskboardNGRXComponent\r\n    ]\r\n})\r\nexport class TaskboardNGRXModule { }\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/taskboard-ngrx/taskboard-ngrx.module.ts"],"sourceRoot":"webpack:///"}